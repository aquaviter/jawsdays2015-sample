


<!DOCTYPE html>
<html lang="en" class="">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    
    
    <title>epoch/epoch.min.js at master · fastly/epoch · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="fastly/epoch" name="twitter:title" /><meta content="epoch - A general purpose, real-time visualization library." name="twitter:description" /><meta content="https://avatars2.githubusercontent.com/u/777070?v=3&amp;s=400" name="twitter:image:src" />
      <meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars2.githubusercontent.com/u/777070?v=3&amp;s=400" property="og:image" /><meta content="fastly/epoch" property="og:title" /><meta content="https://github.com/fastly/epoch" property="og:url" /><meta content="epoch - A general purpose, real-time visualization library." property="og:description" />
      <meta name="browser-stats-url" content="/_stats">
    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035">
    
    <meta name="pjax-timeout" content="1000">
    

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="99AC80DE:72C7:2F0A7E56:54E9F46A" name="octolytics-dimension-request_id" />
    
    <meta content="Rails, view, blob#show" name="analytics-event" />

    
    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">


    <meta content="authenticity_token" name="csrf-param" />
<meta content="fo2KH2gS8HSzKH2pwJyHJV2ZLl157glutwb49rlIfuG9dWykyEjMG57hKBx832GYmNM5i5/7YqvgoBJKJt9VFw==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-951e64287f8bc97e9b47e510c3be2de006cf747d5c833af0f3389ecb49313596.css" media="all" rel="stylesheet" />
    <link href="https://assets-cdn.github.com/assets/github2-f7073494168d35df2845fccdae3f73cb69dc51cf65c42dccd9cefb67ee814256.css" media="all" rel="stylesheet" />
    
    


    <meta http-equiv="x-pjax-version" content="f323dd8546e66c2e974b3bce9d06785e">

      
  <meta name="description" content="epoch - A general purpose, real-time visualization library.">
  <meta name="go-import" content="github.com/fastly/epoch git https://github.com/fastly/epoch.git">

  <meta content="777070" name="octolytics-dimension-user_id" /><meta content="fastly" name="octolytics-dimension-user_login" /><meta content="11010098" name="octolytics-dimension-repository_id" /><meta content="fastly/epoch" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="11010098" name="octolytics-dimension-repository_network_root_id" /><meta content="fastly/epoch" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/fastly/epoch/commits/master.atom" rel="alternate" title="Recent Commits to epoch:master" type="application/atom+xml">

  </head>


  <body class="logged_out  env-production  vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      
      <div class="header header-logged-out" role="banner">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/" data-ga-click="(Logged out) Header, go to homepage, icon:logo-wordmark">
      <span class="mega-octicon octicon-logo-github"></span>
    </a>

    <div class="header-actions" role="navigation">
        <a class="button primary" href="/join" data-ga-click="(Logged out) Header, clicked Sign up, text:sign-up">Sign up</a>
      <a class="button" href="/login?return_to=%2Ffastly%2Fepoch%2Fblob%2Fmaster%2Fepoch.min.js" data-ga-click="(Logged out) Header, clicked Sign in, text:sign-in">Sign in</a>
    </div>

    <div class="site-search repo-scope js-site-search" role="search">
      <form accept-charset="UTF-8" action="/fastly/epoch/search" class="js-site-search-form" data-global-search-url="/search" data-repo-search-url="/fastly/epoch/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
  <input type="text"
    class="js-site-search-field is-clearable"
    data-hotkey="s"
    name="q"
    placeholder="Search"
    data-global-scope-placeholder="Search GitHub"
    data-repo-scope-placeholder="Search"
    tabindex="1"
    autocapitalize="off">
  <div class="scope-badge">This repository</div>
</form>
    </div>

      <ul class="header-nav left" role="navigation">
          <li class="header-nav-item">
            <a class="header-nav-link" href="/explore" data-ga-click="(Logged out) Header, go to explore, text:explore">Explore</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/features" data-ga-click="(Logged out) Header, go to features, text:features">Features</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://enterprise.github.com/" data-ga-click="(Logged out) Header, go to enterprise, text:enterprise">Enterprise</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/blog" data-ga-click="(Logged out) Header, go to blog, text:blog">Blog</a>
          </li>
      </ul>

  </div>
</div>



      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        
<ul class="pagehead-actions">

  <li>
      <a href="/login?return_to=%2Ffastly%2Fepoch"
    class="minibutton with-count tooltipped tooltipped-n"
    aria-label="You must be signed in to watch a repository" rel="nofollow">
    <span class="octicon octicon-eye"></span>
    Watch
  </a>
  <a class="social-count" href="/fastly/epoch/watchers">
    179
  </a>


  </li>

  <li>
      <a href="/login?return_to=%2Ffastly%2Fepoch"
    class="minibutton with-count tooltipped tooltipped-n"
    aria-label="You must be signed in to star a repository" rel="nofollow">
    <span class="octicon octicon-star"></span>
    Star
  </a>

    <a class="social-count js-social-count" href="/fastly/epoch/stargazers">
      3,823
    </a>

  </li>

    <li>
      <a href="/login?return_to=%2Ffastly%2Fepoch"
        class="minibutton with-count tooltipped tooltipped-n"
        aria-label="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-repo-forked"></span>
        Fork
      </a>
      <a href="/fastly/epoch/network" class="social-count">
        176
      </a>
    </li>
</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/fastly" class="url fn" itemprop="url" rel="author"><span itemprop="title">fastly</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/fastly/epoch" class="js-current-repository" data-pjax="#js-repo-pjax-container">epoch</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            
<nav class="sunken-menu repo-nav js-repo-nav js-sidenav-container-pjax js-octicon-loaders"
     role="navigation"
     data-pjax="#js-repo-pjax-container"
     data-issue-count-url="/fastly/epoch/issues/counts">
  <ul class="sunken-menu-group">
    <li class="tooltipped tooltipped-w" aria-label="Code">
      <a href="/fastly/epoch" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /fastly/epoch">
        <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>    </li>

      <li class="tooltipped tooltipped-w" aria-label="Issues">
        <a href="/fastly/epoch/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /fastly/epoch/issues">
          <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
          <span class="js-issue-replace-counter"></span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>      </li>

    <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
      <a href="/fastly/epoch/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g p" data-selected-links="repo_pulls /fastly/epoch/pulls">
          <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
          <span class="js-pull-replace-counter"></span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>    </li>


  </ul>
  <div class="sunken-menu-separator"></div>
  <ul class="sunken-menu-group">

    <li class="tooltipped tooltipped-w" aria-label="Pulse">
      <a href="/fastly/epoch/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-selected-links="pulse /fastly/epoch/pulse">
        <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>    </li>

    <li class="tooltipped tooltipped-w" aria-label="Graphs">
      <a href="/fastly/epoch/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-selected-links="repo_graphs repo_contributors /fastly/epoch/graphs">
        <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>    </li>
  </ul>


</nav>

              <div class="only-with-full-nav">
                  
<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><span class="text-emphasized">HTTPS</span> clone URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="https://github.com/fastly/epoch.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><span class="text-emphasized">Subversion</span> checkout URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="https://github.com/fastly/epoch" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>



<p class="clone-options">You can clone with
  <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a> or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</p>



                <a href="/fastly/epoch/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download the contents of fastly/epoch as a zip file"
                   title="Download the contents of fastly/epoch as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          

<a href="/fastly/epoch/blob/275495a237d1ff3d81a4a3b576ba3351c5029d5d/epoch.min.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:c92141bf0ddb50cd3950e61fb57ee37a -->

<div class="file-navigation js-zeroclipboard-container">
  
<div class="select-menu js-menu-container js-select-menu left">
  <span class="minibutton select-menu-button js-menu-target css-truncate" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    title="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tag…" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/fastly/epoch/blob/gh-pages/epoch.min.js"
               data-name="gh-pages"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="gh-pages">
                gh-pages
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/fastly/epoch/blob/james-hasOwnProperty/epoch.min.js"
               data-name="james-hasOwnProperty"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="james-hasOwnProperty">
                james-hasOwnProperty
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/fastly/epoch/blob/master/epoch.min.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="master">
                master
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fastly/epoch/tree/0.6.0/epoch.min.js"
                 data-name="0.6.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.6.0">0.6.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fastly/epoch/tree/0.5.2/epoch.min.js"
                 data-name="0.5.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.5.2">0.5.2</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fastly/epoch/tree/0.3.5/epoch.min.js"
                 data-name="0.3.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.3.5">0.3.5</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fastly/epoch/tree/0.3.4/epoch.min.js"
                 data-name="0.3.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.3.4">0.3.4</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fastly/epoch/tree/0.3.3/epoch.min.js"
                 data-name="0.3.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.3.3">0.3.3</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fastly/epoch/tree/0.3.2/epoch.min.js"
                 data-name="0.3.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.3.2">0.3.2</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fastly/epoch/tree/0.3.1/epoch.min.js"
                 data-name="0.3.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.3.1">0.3.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fastly/epoch/tree/0.3.0/epoch.min.js"
                 data-name="0.3.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.3.0">0.3.0</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fastly/epoch/tree/0.2.4/epoch.min.js"
                 data-name="0.2.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.2.4">0.2.4</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fastly/epoch/tree/0.2.3/epoch.min.js"
                 data-name="0.2.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.2.3">0.2.3</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fastly/epoch/tree/0.2.2/epoch.min.js"
                 data-name="0.2.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.2.2">0.2.2</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fastly/epoch/tree/0.2.1/epoch.min.js"
                 data-name="0.2.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.2.1">0.2.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fastly/epoch/tree/0.1.1/epoch.min.js"
                 data-name="0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.1.1">0.1.1</a>
            </div>
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fastly/epoch/tree/0.1.0/epoch.min.js"
                 data-name="0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.1.0">0.1.0</a>
            </div>
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

  <div class="button-group right">
    <a href="/fastly/epoch/find/master"
          class="js-show-file-finder minibutton empty-icon tooltipped tooltipped-s"
          data-pjax
          data-hotkey="t"
          aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
    <button aria-label="Copy file path to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
  </div>

  <div class="breadcrumb js-zeroclipboard-target">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/fastly/epoch" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">epoch</span></a></span></span><span class="separator">/</span><strong class="final-path">epoch.min.js</strong>
  </div>
</div>


  <div class="commit file-history-tease">
    <div class="file-history-tease-header">
        <img alt="Ryan Sandor Richards" class="avatar" data-user="146592" height="24" src="https://avatars0.githubusercontent.com/u/146592?v=3&amp;s=48" width="24" />
        <span class="author"><a href="/rsandor" rel="contributor">rsandor</a></span>
        <time datetime="2014-07-22T05:28:56Z" is="relative-time">Jul 21, 2014</time>
        <div class="commit-title">
            <a href="/fastly/epoch/commit/7cdcb3842b32c4cdea311978c2fff143a1aa5e35" class="message" data-pjax="true" title="Release 0.6.0">Release 0.6.0</a>
        </div>
    </div>

    <div class="participation">
      <p class="quickstat">
        <a href="#blob_contributors_box" rel="facebox">
          <strong>1</strong>
           contributor
        </a>
      </p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="Ryan Sandor Richards" data-user="146592" height="24" src="https://avatars0.githubusercontent.com/u/146592?v=3&amp;s=48" width="24" />
            <a href="/rsandor">rsandor</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file">
  <div class="file-header">
    <div class="file-info">
        115 lines (114 sloc)
        <span class="file-info-divider"></span>
      54.712 kb
    </div>
    <div class="file-actions">
      <div class="button-group">
        <a href="/fastly/epoch/raw/master/epoch.min.js" class="minibutton " id="raw-url">Raw</a>
          <a href="/fastly/epoch/blame/master/epoch.min.js" class="minibutton js-update-url-with-hash">Blame</a>
        <a href="/fastly/epoch/commits/master/epoch.min.js" class="minibutton " rel="nofollow">History</a>
      </div><!-- /.button-group -->


          <a class="octicon-button disabled tooltipped tooltipped-w" href="#"
             aria-label="You must be signed in to make or propose changes"><span class="octicon octicon-pencil"></span></a>

        <a class="octicon-button danger disabled tooltipped tooltipped-w" href="#"
           aria-label="You must be signed in to make or propose changes">
        <span class="octicon octicon-trashcan"></span>
      </a>
    </div><!-- /.actions -->
  </div>
  

  <div class="blob-wrapper data type-javascript">
      <table class="highlight tab-size-8 js-file-line-container">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s">var</span> e;<span class="pl-c1">null</span><span class="pl-k">==</span><span class="pl-s3">window</span>.Epoch<span class="pl-k">&amp;&amp;</span>(<span class="pl-s3">window</span>.Epoch<span class="pl-k">=</span>{});<span class="pl-c1">null</span><span class="pl-k">==</span>(e<span class="pl-k">=</span><span class="pl-s3">window</span>.Epoch).Chart<span class="pl-k">&amp;&amp;</span>(e.Chart<span class="pl-k">=</span>{});<span class="pl-c1">null</span><span class="pl-k">==</span>(e<span class="pl-k">=</span><span class="pl-s3">window</span>.Epoch).Time<span class="pl-k">&amp;&amp;</span>(e.Time<span class="pl-k">=</span>{});<span class="pl-c1">null</span><span class="pl-k">==</span>(e<span class="pl-k">=</span><span class="pl-s3">window</span>.Epoch).Util<span class="pl-k">&amp;&amp;</span>(e.Util<span class="pl-k">=</span>{});<span class="pl-c1">null</span><span class="pl-k">==</span>(e<span class="pl-k">=</span><span class="pl-s3">window</span>.Epoch).Formats<span class="pl-k">&amp;&amp;</span>(e.Formats<span class="pl-k">=</span>{});<span class="pl-s3">Epoch</span>.<span class="pl-en">warn</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">g</span>){<span class="pl-k">return</span>(<span class="pl-en">console</span><span class="pl-s3">.warn</span><span class="pl-k">||</span><span class="pl-en">console</span><span class="pl-s3">.log</span>)(<span class="pl-s1"><span class="pl-pds">&quot;</span>Epoch Warning: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>g)};<span class="pl-s3">Epoch</span>.<span class="pl-en">exception</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">g</span>){<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Epoch Error: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>g;}}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s3">Epoch</span>.<span class="pl-en">TestContext</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-st">function</span> <span class="pl-en">e</span>(){<span class="pl-s">var</span> c,a,d;<span class="pl-v">this</span>._log<span class="pl-k">=</span>[];a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span>g.<span class="pl-sc">length</span>;a<span class="pl-k">&lt;</span>d;a<span class="pl-k">++</span>)c<span class="pl-k">=</span>g[a],<span class="pl-v">this</span>._makeFauxMethod(c)}<span class="pl-s">var</span> g;g<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>arc arcTo beginPath bezierCurveTo clearRect clip closePath drawImage fill fillRect fillText moveTo quadraticCurveTo rect restore rotate save scale scrollPathIntoView setLineDash setTransform stroke strokeRect strokeText transform translate<span class="pl-pds">&quot;</span></span>.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>);<span class="pl-s3">e</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_makeFauxMethod</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>[c]<span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a;<span class="pl-k">return</span> <span class="pl-v">this</span>._log.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> d,</td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code js-file-line">b,h;h<span class="pl-k">=</span>[];d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span>arguments.<span class="pl-sc">length</span>;d<span class="pl-k">&lt;</span>b;d<span class="pl-k">++</span>)a<span class="pl-k">=</span>arguments[d],h.<span class="pl-s3">push</span>(a.<span class="pl-s3">toString</span>());<span class="pl-k">return</span> h}.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>,arguments).<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>)}};<span class="pl-s3">e</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getImageData</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> c;<span class="pl-v">this</span>._log.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>getImageData(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,d,b;b<span class="pl-k">=</span>[];a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span>arguments.<span class="pl-sc">length</span>;a<span class="pl-k">&lt;</span>d;a<span class="pl-k">++</span>)c<span class="pl-k">=</span>arguments[a],b.<span class="pl-s3">push</span>(c.<span class="pl-s3">toString</span>());<span class="pl-k">return</span> b}.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>,arguments).<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span>{width<span class="pl-k">:</span><span class="pl-c1">0</span>,height<span class="pl-k">:</span><span class="pl-c1">0</span>,resolution<span class="pl-k">:</span><span class="pl-c1">1</span>,data<span class="pl-k">:</span>[]}};<span class="pl-k">return</span> e}()}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s">var</span> e,g;<span class="pl-en">e</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-s3">Object</span>.<span class="pl-sc">prototype</span>.toString.<span class="pl-s3">call</span>(a)<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>[object <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>}};Epoch.isArray<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>(g<span class="pl-k">=</span><span class="pl-s3">Array</span>.isArray)<span class="pl-k">?</span>g<span class="pl-k">:</span>e(<span class="pl-s1"><span class="pl-pds">&quot;</span>Array<span class="pl-pds">&quot;</span></span>);Epoch.isObject<span class="pl-k">=</span>e(<span class="pl-s1"><span class="pl-pds">&quot;</span>Object<span class="pl-pds">&quot;</span></span>);Epoch.isString<span class="pl-k">=</span>e(<span class="pl-s1"><span class="pl-pds">&quot;</span>String<span class="pl-pds">&quot;</span></span>);Epoch.isFunction<span class="pl-k">=</span>e(<span class="pl-s1"><span class="pl-pds">&quot;</span>Function<span class="pl-pds">&quot;</span></span>);Epoch.isNumber<span class="pl-k">=</span>e(<span class="pl-s1"><span class="pl-pds">&quot;</span>Number<span class="pl-pds">&quot;</span></span>);<span class="pl-s3">Epoch</span>.<span class="pl-en">isElement</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-k">return</span><span class="pl-s1"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==typeof</span> HTMLElement<span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">!==</span>HTMLElement<span class="pl-k">?</span>c <span class="pl-k">instanceof</span> HTMLElement<span class="pl-k">:</span><span class="pl-c1">null</span><span class="pl-k">!=</span>c<span class="pl-k">&amp;&amp;</span>Epoch.isObject(c)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">===</span>c.<span class="pl-sc">nodeType</span><span class="pl-k">&amp;&amp;</span>Epoch.isString(c.<span class="pl-sc">nodeName</span>)};<span class="pl-s3">Epoch.Util</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-s">var</span> a,d,b;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code js-file-line">c)<span class="pl-k">return</span> <span class="pl-c1">null</span>;a<span class="pl-k">=</span>{};<span class="pl-k">for</span>(d <span class="pl-k">in</span> c)b<span class="pl-k">=</span>c[d],a[d]<span class="pl-k">=</span>b;<span class="pl-k">return</span> a};<span class="pl-s3">Epoch.Util</span>.<span class="pl-en">defaults</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>){<span class="pl-s">var</span> d,b,h,k,f;f<span class="pl-k">=</span>Epoch.Util.copy(c);<span class="pl-k">for</span>(h <span class="pl-k">in</span> a)k<span class="pl-k">=</span>c[h],b<span class="pl-k">=</span>a[h],d<span class="pl-k">=</span>Epoch.isObject(k)<span class="pl-k">&amp;&amp;</span>Epoch.isObject(b),<span class="pl-c1">null</span><span class="pl-k">!=</span>k<span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">!=</span>b<span class="pl-k">?</span>d<span class="pl-k">&amp;&amp;!</span>Epoch.isArray(k)<span class="pl-k">?</span>f[h]<span class="pl-k">=</span>Epoch.Util.defaults(k,b)<span class="pl-k">:</span>f[h]<span class="pl-k">=</span>k<span class="pl-k">:</span>f[h]<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>k<span class="pl-k">?</span>k<span class="pl-k">:</span>b;<span class="pl-k">return</span> f};<span class="pl-s3">Epoch.Util</span>.<span class="pl-en">formatSI</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> b,h,k,f;<span class="pl-c1">null</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">1</span>);<span class="pl-c1">null</span><span class="pl-k">==</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-c1">1E3</span><span class="pl-k">&gt;</span>c){<span class="pl-k">if</span>((c|<span class="pl-c1">0</span>)<span class="pl-k">!==</span>c<span class="pl-k">||</span>d)c<span class="pl-k">=</span>c.toFixed(a);<span class="pl-k">return</span> c}f<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>KMGTPEZY<span class="pl-pds">&quot;</span></span>.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(h <span class="pl-k">in</span> f)<span class="pl-k">if</span>(k<span class="pl-k">=</span>f[h],b<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">10</span>,<span class="pl-c1">3</span><span class="pl-k">*</span>((h|<span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-c1">1</span>)),c<span class="pl-k">&gt;=</span>b<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&lt;</span><span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">10</span>,</td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code js-file-line"><span class="pl-c1">3</span><span class="pl-k">*</span>((h|<span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-c1">2</span>))){c<span class="pl-k">/=</span>b;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">%</span><span class="pl-c1">1</span><span class="pl-k">||</span>d)c<span class="pl-k">=</span>c.toFixed(a);<span class="pl-k">return</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>k}};<span class="pl-s3">Epoch.Util</span>.<span class="pl-en">formatBytes</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> b,h,k,f;<span class="pl-c1">null</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">1</span>);<span class="pl-c1">null</span><span class="pl-k">==</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-c1">1024</span><span class="pl-k">&gt;</span>c){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">%</span><span class="pl-c1">1</span><span class="pl-k">||</span>d)c<span class="pl-k">=</span>c.toFixed(a);<span class="pl-k">return</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span> B<span class="pl-pds">&quot;</span></span>}f<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>KB MB GB TB PB EB ZB YB<span class="pl-pds">&quot;</span></span>.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(h <span class="pl-k">in</span> f)<span class="pl-k">if</span>(k<span class="pl-k">=</span>f[h],b<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">1024</span>,(h|<span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-c1">1</span>),c<span class="pl-k">&gt;=</span>b<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&lt;</span><span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">1024</span>,(h|<span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-c1">2</span>)){c<span class="pl-k">/=</span>b;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">%</span><span class="pl-c1">1</span><span class="pl-k">||</span>d)c<span class="pl-k">=</span>c.toFixed(a);<span class="pl-k">return</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>k}};<span class="pl-s3">Epoch.Util</span>.<span class="pl-en">dasherize</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-k">return</span> Epoch.Util.trim(c).<span class="pl-s3">replace</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">toLowerCase</span>()};Epoch.Util.<span class="pl-sc">domain</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code js-file-line"><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>){<span class="pl-s">var</span> d,b,h,k,f,q,u,m;<span class="pl-c1">null</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>);h<span class="pl-k">=</span>{};d<span class="pl-k">=</span>[];k<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(q<span class="pl-k">=</span>c.<span class="pl-sc">length</span>;k<span class="pl-k">&lt;</span>q;k<span class="pl-k">++</span>)<span class="pl-k">for</span>(b<span class="pl-k">=</span>c[k],m<span class="pl-k">=</span>b.values,f<span class="pl-k">=</span><span class="pl-c1">0</span>,u<span class="pl-k">=</span>m.<span class="pl-sc">length</span>;f<span class="pl-k">&lt;</span>u;f<span class="pl-k">++</span>)b<span class="pl-k">=</span>m[f],<span class="pl-c1">null</span><span class="pl-k">==</span>h[b[a]]<span class="pl-k">&amp;&amp;</span>(d.<span class="pl-s3">push</span>(b[a]),h[b[a]]<span class="pl-k">=!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> d};<span class="pl-s3">Epoch.Util</span>.<span class="pl-en">trim</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-k">return</span> Epoch.isString(c)<span class="pl-k">?</span>c.<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-k">$</span><span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-c1">null</span>};<span class="pl-s3">Epoch.Util</span>.<span class="pl-en">getComputedStyle</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(Epoch.isFunction(<span class="pl-s3">window</span>.getComputedStyle))<span class="pl-k">return</span> <span class="pl-s3">window</span>.getComputedStyle(c,a);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span>c.currentStyle)<span class="pl-k">return</span> c.currentStyle};<span class="pl-s3">Epoch.Util</span>.<span class="pl-en">toRGBA</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>){<span class="pl-s">var</span> d,b,</td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code js-file-line">h;<span class="pl-k">if</span>(d<span class="pl-k">=</span>c.<span class="pl-s3">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>rgba<span class="pl-cce">\(</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-c1">[<span class="pl-c1">0-9</span><span class="pl-cce">\.</span>]</span><span class="pl-k">+</span><span class="pl-cce">\)</span><span class="pl-pds">/</span></span>))h<span class="pl-k">=</span>d[<span class="pl-c1">1</span>],b<span class="pl-k">=</span>d[<span class="pl-c1">2</span>],d<span class="pl-k">=</span>d[<span class="pl-c1">3</span>],b<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>rgba(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>h<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(d<span class="pl-k">=</span>d3.rgb(c))b<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>rgba(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d.r<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d.g<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d.b<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> b};<span class="pl-s3">Epoch.Util</span>.<span class="pl-en">getContext</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>){<span class="pl-c1">null</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>2d<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">null</span><span class="pl-k">!=</span>c.getContext<span class="pl-k">?</span>c.getContext(a)<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">Epoch.TestContext</span>}}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s3">d3.selection</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">width</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">e</span>){<span class="pl-k">return</span> <span class="pl-c1">null</span><span class="pl-k">!=</span>e<span class="pl-k">&amp;&amp;</span>Epoch.isString(e)<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,e)<span class="pl-k">:</span><span class="pl-c1">null</span><span class="pl-k">!=</span>e<span class="pl-k">&amp;&amp;</span>Epoch.isNumber(e)<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:+</span>Epoch.Util.getComputedStyle(<span class="pl-v">this</span>.node(),<span class="pl-c1">null</span>).<span class="pl-sc">width</span>.<span class="pl-s3">replace</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)};<span class="pl-s3">d3.selection</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">height</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">e</span>){<span class="pl-k">return</span> <span class="pl-c1">null</span><span class="pl-k">!=</span>e<span class="pl-k">&amp;&amp;</span>Epoch.isString(e)<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,e)<span class="pl-k">:</span><span class="pl-c1">null</span><span class="pl-k">!=</span>e<span class="pl-k">&amp;&amp;</span>Epoch.isNumber(e)<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:+</span>Epoch.Util.getComputedStyle(<span class="pl-v">this</span>.node(),<span class="pl-c1">null</span>).<span class="pl-sc">height</span>.<span class="pl-s3">replace</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s">var</span> e;<span class="pl-s3">Epoch.Formats</span>.<span class="pl-en">regular</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">g</span>){<span class="pl-k">return</span> g};<span class="pl-s3">Epoch.Formats</span>.<span class="pl-en">si</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">g</span>){<span class="pl-k">return</span> Epoch.Util.formatSI(g)};<span class="pl-s3">Epoch.Formats</span>.<span class="pl-en">percent</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">g</span>){<span class="pl-k">return</span>(<span class="pl-c1">100</span><span class="pl-k">*</span>g).toFixed(<span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span>};<span class="pl-s3">Epoch.Formats</span>.<span class="pl-en">seconds</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">g</span>){<span class="pl-k">return</span> e(<span class="pl-k">new</span> <span class="pl-en">Date</span>(<span class="pl-c1">1E3</span><span class="pl-k">*</span>g))};e<span class="pl-k">=</span>d3<span class="pl-s3">.time</span>.format(<span class="pl-s1"><span class="pl-pds">&quot;</span>%I:%M:%S %p<span class="pl-pds">&quot;</span></span>);<span class="pl-s3">Epoch.Formats</span>.<span class="pl-en">bytes</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">g</span>){<span class="pl-k">return</span> Epoch.Util.formatBytes(g)}}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s">var</span> e<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>){<span class="pl-st">function</span> <span class="pl-en">d</span>(){<span class="pl-v">this</span>.<span class="pl-sc">constructor</span><span class="pl-k">=</span>c}<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> a)e.<span class="pl-s3">call</span>(a,b)<span class="pl-k">&amp;&amp;</span>(c[b]<span class="pl-k">=</span>a[b]);<span class="pl-s3">d</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-s3">c</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">d</span>;c.__super__<span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-k">return</span> c};<span class="pl-s3">Epoch</span>.<span class="pl-en">Events</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-st">function</span> <span class="pl-en">c</span>(){<span class="pl-v">this</span>._events<span class="pl-k">=</span>{}}<span class="pl-s3">c</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">on</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> b;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span>d)<span class="pl-k">return</span> <span class="pl-c1">null</span><span class="pl-k">==</span>(b<span class="pl-k">=</span><span class="pl-v">this</span>._events)[a]<span class="pl-k">&amp;&amp;</span>(b[a]<span class="pl-k">=</span>[]),<span class="pl-v">this</span>._events[a].<span class="pl-s3">push</span>(d)};<span class="pl-s3">c</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">onAll</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> d,b,h;<span class="pl-k">if</span>(Epoch.isObject(a)){h<span class="pl-k">=</span>[];<span class="pl-k">for</span>(b <span class="pl-k">in</span> a)d<span class="pl-k">=</span>a[b],h.<span class="pl-s3">push</span>(<span class="pl-v">this</span>.on(b,d));<span class="pl-k">return</span> h}};<span class="pl-s3">c</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">off</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code js-file-line"><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> b,h;<span class="pl-k">if</span>(Epoch.isArray(<span class="pl-v">this</span>._events[a])){<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">==</span>d)<span class="pl-k">return</span> <span class="pl-k">delete</span> <span class="pl-v">this</span>._events[a];<span class="pl-k">for</span>(h<span class="pl-k">=</span>[];<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>(b<span class="pl-k">=</span><span class="pl-v">this</span>._events[a].<span class="pl-s3">indexOf</span>(d));)h.<span class="pl-s3">push</span>(<span class="pl-v">this</span>._events[a].<span class="pl-s3">splice</span>(b,<span class="pl-c1">1</span>));<span class="pl-k">return</span> h}};<span class="pl-s3">c</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">offAll</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> d,b,h,k;<span class="pl-k">if</span>(Epoch.isArray(a)){k<span class="pl-k">=</span>[];d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(h<span class="pl-k">=</span>a.<span class="pl-sc">length</span>;d<span class="pl-k">&lt;</span>h;d<span class="pl-k">++</span>)b<span class="pl-k">=</span>a[d],k.<span class="pl-s3">push</span>(<span class="pl-v">this</span>.off(b));<span class="pl-k">return</span> k}<span class="pl-k">if</span>(Epoch.isObject(a)){h<span class="pl-k">=</span>[];<span class="pl-k">for</span>(b <span class="pl-k">in</span> a)d<span class="pl-k">=</span>a[b],h.<span class="pl-s3">push</span>(<span class="pl-v">this</span>.off(b,d));<span class="pl-k">return</span> h}};<span class="pl-s3">c</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">trigger</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> d,b,h,k,f,q,c,m;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>._events[a]){<span class="pl-en">d</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,f,q;q<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code js-file-line">[];k<span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(f<span class="pl-k">=</span>arguments.<span class="pl-sc">length</span>;<span class="pl-c1">1</span><span class="pl-k">&lt;=</span>f<span class="pl-k">?</span>a<span class="pl-k">&lt;</span>f<span class="pl-k">:</span>a<span class="pl-k">&gt;</span>f;k<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">&lt;=</span>f<span class="pl-k">?++</span>a<span class="pl-k">:--</span>a)q.<span class="pl-s3">push</span>(arguments[k]);<span class="pl-k">return</span> q}.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>,arguments);c<span class="pl-k">=</span><span class="pl-v">this</span>._events[a];m<span class="pl-k">=</span>[];f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(q<span class="pl-k">=</span>c.<span class="pl-sc">length</span>;f<span class="pl-k">&lt;</span>q;f<span class="pl-k">++</span>)b<span class="pl-k">=</span>c[f],h<span class="pl-k">=</span><span class="pl-c1">null</span>,Epoch.isString(b)<span class="pl-k">?</span>h<span class="pl-k">=</span><span class="pl-v">this</span>[b]<span class="pl-k">:</span>Epoch.isFunction(b)<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span>b),<span class="pl-c1">null</span><span class="pl-k">==</span>h<span class="pl-k">&amp;&amp;</span>Epoch.exception(<span class="pl-s1"><span class="pl-pds">&quot;</span>Callback for event &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>&#39; is not a function or reference to a method.<span class="pl-pds">&quot;</span></span>),m.<span class="pl-s3">push</span>(h.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>,d));<span class="pl-k">return</span> m}};<span class="pl-k">return</span> c}();<span class="pl-s3">Epoch.Chart</span>.<span class="pl-en">Base</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-st">function</span> <span class="pl-en">a</span>(<span class="pl-vpf">h</span>){<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>h<span class="pl-k">?</span>h<span class="pl-k">:</span>{};a.__super__.<span class="pl-sc">constructor</span>.<span class="pl-s3">call</span>(<span class="pl-v">this</span>);<span class="pl-v">this</span>.setData(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.<span class="pl-sc">data</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code js-file-line">[]);<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.el<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.el<span class="pl-k">=</span>d3.<span class="pl-s3">select</span>(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.el));<span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.<span class="pl-sc">width</span>;<span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.<span class="pl-sc">height</span>;<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.el<span class="pl-k">?</span>(<span class="pl-c1">null</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">=</span><span class="pl-v">this</span>.el.<span class="pl-sc">width</span>()),<span class="pl-c1">null</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">=</span><span class="pl-v">this</span>.el.<span class="pl-sc">height</span>()))<span class="pl-k">:</span>(<span class="pl-c1">null</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">=</span>d.<span class="pl-sc">width</span>),<span class="pl-c1">null</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">=</span>d.<span class="pl-sc">height</span>));<span class="pl-v">this</span>.onAll(b)}<span class="pl-s">var</span> d,b;g(a,c);d<span class="pl-k">=</span>{width<span class="pl-k">:</span><span class="pl-c1">320</span>,height<span class="pl-k">:</span><span class="pl-c1">240</span>};b<span class="pl-k">=</span>{<span class="pl-s1"><span class="pl-pds">&quot;</span>option:width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>dimensionsChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:height<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>dimensionsChanged<span class="pl-pds">&quot;</span></span>};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_getAllOptions</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> Epoch.Util.defaults({},</td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code js-file-line"><span class="pl-v">this</span>.<span class="pl-sc">options</span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_getOption</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> k,f;a<span class="pl-k">=</span>a.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(k<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>;a.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">!=</span>k;)f<span class="pl-k">=</span>a.<span class="pl-s3">shift</span>(),k<span class="pl-k">=</span>k[f];<span class="pl-k">return</span> k};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_setOption</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">k</span>){<span class="pl-s">var</span> f,q,b;f<span class="pl-k">=</span>a.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(q<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>;f.<span class="pl-sc">length</span>;){b<span class="pl-k">=</span>f.<span class="pl-s3">shift</span>();<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>f.<span class="pl-sc">length</span>){q[b]<span class="pl-k">=</span>k;<span class="pl-v">this</span>.trigger(<span class="pl-s1"><span class="pl-pds">&quot;</span>option:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a);<span class="pl-k">break</span>}<span class="pl-c1">null</span><span class="pl-k">==</span>q[b]<span class="pl-k">&amp;&amp;</span>(q[b]<span class="pl-k">=</span>{});q<span class="pl-k">=</span>q[b]}};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_setManyOptions</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">k</span>){<span class="pl-s">var</span> f,q,b;<span class="pl-c1">null</span><span class="pl-k">==</span>k<span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);b<span class="pl-k">=</span>[];<span class="pl-k">for</span>(f <span class="pl-k">in</span> a)q<span class="pl-k">=</span>a[f],Epoch.isObject(q)<span class="pl-k">?</span>b.<span class="pl-s3">push</span>(<span class="pl-v">this</span>._setManyOptions(q,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(k<span class="pl-k">+</span>f)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>))<span class="pl-k">:</span>b.<span class="pl-s3">push</span>(<span class="pl-v">this</span>._setOption(k<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code js-file-line">f,q));<span class="pl-k">return</span> b};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">option</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>arguments.<span class="pl-sc">length</span>)<span class="pl-k">return</span> <span class="pl-v">this</span>._getAllOptions();<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">===</span>arguments.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>Epoch.isString(arguments[<span class="pl-c1">0</span>]))<span class="pl-k">return</span> <span class="pl-v">this</span>._getOption(arguments[<span class="pl-c1">0</span>]);<span class="pl-k">if</span>(<span class="pl-c1">2</span><span class="pl-k">===</span>arguments.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>Epoch.isString(arguments[<span class="pl-c1">0</span>]))<span class="pl-k">return</span> <span class="pl-v">this</span>._setOption(arguments[<span class="pl-c1">0</span>],arguments[<span class="pl-c1">1</span>]);<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">===</span>arguments.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>Epoch.isObject(arguments[<span class="pl-c1">0</span>]))<span class="pl-k">return</span> <span class="pl-v">this</span>._setManyOptions(arguments[<span class="pl-c1">0</span>])};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setData</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> k,f,b,d,c;k<span class="pl-k">=</span><span class="pl-c1">1</span>;d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span>a.<span class="pl-sc">length</span>;d<span class="pl-k">&lt;</span>c;d<span class="pl-k">++</span>)b<span class="pl-k">=</span>a[d],f<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>layer<span class="pl-pds">&quot;</span></span>],f.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>category<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code js-file-line">k),b.category<span class="pl-k">=</span>k,<span class="pl-c1">null</span><span class="pl-k">!=</span>b.<span class="pl-sc">label</span><span class="pl-k">&amp;&amp;</span>f.<span class="pl-s3">push</span>(Epoch.Util.dasherize(b.<span class="pl-sc">label</span>)),b.<span class="pl-sc">className</span><span class="pl-k">=</span>f.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>),k<span class="pl-k">++</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">data</span><span class="pl-k">=</span>a};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">k</span>){<span class="pl-c1">null</span><span class="pl-k">==</span>k<span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=!</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.setData(a);<span class="pl-k">if</span>(k)<span class="pl-k">return</span> <span class="pl-v">this</span>.draw()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.trigger(<span class="pl-s1"><span class="pl-pds">&quot;</span>draw<span class="pl-pds">&quot;</span></span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">extent</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span>[d3.<span class="pl-s3">min</span>(<span class="pl-v">this</span>.<span class="pl-sc">data</span>,<span class="pl-st">function</span>(<span class="pl-vpf">k</span>){<span class="pl-k">return</span> d3.<span class="pl-s3">min</span>(k.values,a)}),d3.<span class="pl-s3">max</span>(<span class="pl-v">this</span>.<span class="pl-sc">data</span>,<span class="pl-st">function</span>(<span class="pl-vpf">k</span>){<span class="pl-k">return</span> d3.<span class="pl-s3">max</span>(k.values,a)})]};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">dimensionsChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">=</span><span class="pl-v">this</span>.option(<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-sc">width</span>;</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code js-file-line"><span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">=</span><span class="pl-v">this</span>.option(<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-sc">height</span>;<span class="pl-v">this</span>.el.<span class="pl-sc">width</span>(<span class="pl-v">this</span>.<span class="pl-sc">width</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.el.<span class="pl-sc">height</span>(<span class="pl-v">this</span>.<span class="pl-sc">height</span>)};<span class="pl-k">return</span> a}(Epoch.Events);<span class="pl-s3">Epoch.Chart</span>.<span class="pl-en">SVG</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-st">function</span> <span class="pl-en">a</span>(<span class="pl-vpf">d</span>){<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>d<span class="pl-k">?</span>d<span class="pl-k">:</span>{};a.__super__.<span class="pl-sc">constructor</span>.<span class="pl-s3">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-sc">options</span>);<span class="pl-v">this</span>.svg<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.el<span class="pl-k">?</span><span class="pl-v">this</span>.el.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>d3.<span class="pl-s3">select</span>(<span class="pl-s3">document</span>.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>));<span class="pl-v">this</span>.svg.attr({xmlns<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>http://www.w3.org/2000/svg<span class="pl-pds">&quot;</span></span>,width<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-sc">width</span>,height<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-sc">height</span>})}g(a,c);<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">dimensionsChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){a.__super__.dimensionsChanged.<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code js-file-line"><span class="pl-k">return</span> <span class="pl-v">this</span>.svg.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-sc">width</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-sc">height</span>)};<span class="pl-k">return</span> a}(Epoch.Chart.Base);<span class="pl-s3">Epoch.Chart</span>.<span class="pl-en">Canvas</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-st">function</span> <span class="pl-en">a</span>(<span class="pl-vpf">d</span>){<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>d<span class="pl-k">?</span>d<span class="pl-k">:</span>{};a.__super__.<span class="pl-sc">constructor</span>.<span class="pl-s3">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-sc">options</span>);<span class="pl-v">this</span>.pixelRatio<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.pixelRatio<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.pixelRatio<span class="pl-k">:</span><span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-s3">window</span>.devicePixelRatio<span class="pl-k">?</span><span class="pl-s3">window</span>.devicePixelRatio<span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>.canvas<span class="pl-k">=</span>d3.<span class="pl-s3">select</span>(<span class="pl-s3">document</span>.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>CANVAS<span class="pl-pds">&quot;</span></span>));<span class="pl-v">this</span>.canvas.<span class="pl-sc">style</span>({width<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>});<span class="pl-v">this</span>.canvas.attr({width<span class="pl-k">:</span><span class="pl-v">this</span>.getWidth(),</td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code js-file-line">height<span class="pl-k">:</span><span class="pl-v">this</span>.getHeight()});<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.el<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.el.node().<span class="pl-s3">appendChild</span>(<span class="pl-v">this</span>.canvas.node());<span class="pl-v">this</span>.ctx<span class="pl-k">=</span>Epoch.Util.getContext(<span class="pl-v">this</span>.canvas.node())}g(a,c);<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getWidth</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">*</span><span class="pl-v">this</span>.pixelRatio};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getHeight</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">*</span><span class="pl-v">this</span>.pixelRatio};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">clear</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.ctx.clearRect(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-v">this</span>.getWidth(),<span class="pl-v">this</span>.getHeight())};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getStyles</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> Epoch.QueryCSS.getStyles(a,<span class="pl-v">this</span>.el)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">dimensionsChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){a.__super__.dimensionsChanged.<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code js-file-line"><span class="pl-v">this</span>.canvas.<span class="pl-sc">style</span>({width<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>});<span class="pl-k">return</span> <span class="pl-v">this</span>.canvas.attr({width<span class="pl-k">:</span><span class="pl-v">this</span>.getWidth(),height<span class="pl-k">:</span><span class="pl-v">this</span>.getHeight()})};<span class="pl-k">return</span> a}(Epoch.Chart.Base)}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s">var</span> e;<span class="pl-en">e</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-st">function</span> <span class="pl-en">g</span>(){}<span class="pl-s">var</span> c,a,d,b,h;a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span><span class="pl-s1"><span class="pl-pds">&quot;</span>epoch-container-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">++</span>};c<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(<span class="pl-c1">[<span class="pl-k">^</span>#<span class="pl-c1">.</span> ]</span><span class="pl-k">+</span>)<span class="pl-k">?</span>(#<span class="pl-c1">[<span class="pl-k">^</span><span class="pl-c1">.</span> ]</span><span class="pl-k">+</span>)<span class="pl-k">?</span>(<span class="pl-cce">\.</span><span class="pl-c1">[<span class="pl-k">^</span># ]</span><span class="pl-k">+</span>)<span class="pl-k">?</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>;d<span class="pl-k">=!</span><span class="pl-c1">1</span>;<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> f,b;f<span class="pl-k">=</span>a.<span class="pl-s3">match</span>(c);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">==</span>f)<span class="pl-k">return</span> Epoch<span class="pl-s3">.error</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>Query CSS cannot match given selector: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a);b<span class="pl-k">=</span>f[<span class="pl-c1">1</span>];a<span class="pl-k">=</span>f[<span class="pl-c1">2</span>];f<span class="pl-k">=</span>f[<span class="pl-c1">3</span>];b<span class="pl-k">=</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span>b<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">toUpperCase</span>();b<span class="pl-k">=</span><span class="pl-s3">document</span>.<span class="pl-s3">createElement</span>(b);<span class="pl-c1">null</span><span class="pl-k">!=</span>a<span class="pl-k">&amp;&amp;</span>(b.<span class="pl-sc">id</span><span class="pl-k">=</span>a.<span class="pl-s3">substr</span>(<span class="pl-c1">1</span>));<span class="pl-c1">null</span><span class="pl-k">!=</span>f<span class="pl-k">&amp;&amp;</span>(b.<span class="pl-sc">className</span><span class="pl-k">=</span>f.<span class="pl-s3">substr</span>(<span class="pl-c1">1</span>).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\.</span><span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>));<span class="pl-k">return</span> b};<span class="pl-s3">g</span>.<span class="pl-en">log</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> d<span class="pl-k">=</span>a};g.cache<span class="pl-k">=</span>{};g.styleList<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>fill<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>];g.container<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-s3">g</span>.<span class="pl-en">purge</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> g.cache<span class="pl-k">=</span>{}};<span class="pl-s3">g</span>.<span class="pl-en">getContainer</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span>g.container)<span class="pl-k">return</span> g.container;a<span class="pl-k">=</span><span class="pl-s3">document</span>.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>DIV<span class="pl-pds">&quot;</span></span>);a.<span class="pl-sc">id</span><span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>_canvas_css_reference<span class="pl-pds">&quot;</span></span>;<span class="pl-s3">document</span>.<span class="pl-sc">body</span>.<span class="pl-s3">appendChild</span>(a);<span class="pl-k">return</span> g.container<span class="pl-k">=</span>d3.<span class="pl-s3">select</span>(a)};<span class="pl-s3">g</span>.<span class="pl-en">hash</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">f</span>){<span class="pl-s">var</span> d;d<span class="pl-k">=</span>f.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>data-epoch-container-id<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">==</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>b(),f.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>data-epoch-container-id<span class="pl-pds">&quot;</span></span>,d));<span class="pl-k">return</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>__<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a};<span class="pl-s3">g</span>.<span class="pl-en">getStyles</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">f</span>){<span class="pl-s">var</span> b,c,m,l,n,e,r;c<span class="pl-k">=</span>g.<span class="pl-sc">hash</span>(a,f);b<span class="pl-k">=</span>g.cache[c];<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span>b)<span class="pl-k">return</span> b;m<span class="pl-k">=</span>[];<span class="pl-k">for</span>(b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code js-file-line">f.node().<span class="pl-sc">parentNode</span>;<span class="pl-c1">null</span><span class="pl-k">!=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-s1"><span class="pl-pds">&quot;</span>body<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>b.<span class="pl-sc">nodeName</span>.<span class="pl-s3">toLowerCase</span>();)m.<span class="pl-s3">unshift</span>(b),b<span class="pl-k">=</span>b.<span class="pl-sc">parentNode</span>;m.<span class="pl-s3">push</span>(f.node());b<span class="pl-k">=</span>[];e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(r<span class="pl-k">=</span>m.<span class="pl-sc">length</span>;e<span class="pl-k">&lt;</span>r;e<span class="pl-k">++</span>)l<span class="pl-k">=</span>m[e],n<span class="pl-k">=</span>l.<span class="pl-sc">nodeName</span>.<span class="pl-s3">toLowerCase</span>(),<span class="pl-c1">null</span><span class="pl-k">!=</span>l.<span class="pl-sc">id</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>l.<span class="pl-sc">id</span>.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">+=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>l.<span class="pl-sc">id</span>),<span class="pl-c1">null</span><span class="pl-k">!=</span>l.<span class="pl-sc">className</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>l.<span class="pl-sc">className</span>.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">+=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>Epoch.Util.trim(l.<span class="pl-sc">className</span>).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>)),b.<span class="pl-s3">push</span>(n);b.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>);e<span class="pl-k">=</span>Epoch.Util.trim(a).<span class="pl-s3">split</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span></span>);l<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(n<span class="pl-k">=</span>e.<span class="pl-sc">length</span>;l<span class="pl-k">&lt;</span>n;l<span class="pl-k">++</span>)m<span class="pl-k">=</span>e[l],b.<span class="pl-s3">push</span>(m);d<span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span><span class="pl-s3">.log</span>(b);<span class="pl-k">for</span>(l<span class="pl-k">=</span>n<span class="pl-k">=</span>h(b.<span class="pl-s3">shift</span>());b.<span class="pl-sc">length</span>;)m<span class="pl-k">=</span>h(b.<span class="pl-s3">shift</span>()),l.<span class="pl-s3">appendChild</span>(m),l<span class="pl-k">=</span>m;</td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code js-file-line">d<span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span><span class="pl-s3">.log</span>(n);g.getContainer().node().<span class="pl-s3">appendChild</span>(n);m<span class="pl-k">=</span>d3.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>#_canvas_css_reference <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a);l<span class="pl-k">=</span>{};r<span class="pl-k">=</span>g.styleList;n<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(e<span class="pl-k">=</span>r.<span class="pl-sc">length</span>;n<span class="pl-k">&lt;</span>e;n<span class="pl-k">++</span>)b<span class="pl-k">=</span>r[n],l[b]<span class="pl-k">=</span>m.<span class="pl-sc">style</span>(b);g.cache[c]<span class="pl-k">=</span>l;g.getContainer().html(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> l};<span class="pl-k">return</span> g}();Epoch.QueryCSS<span class="pl-k">=</span>e}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s">var</span> e<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>){<span class="pl-st">function</span> <span class="pl-en">d</span>(){<span class="pl-v">this</span>.<span class="pl-sc">constructor</span><span class="pl-k">=</span>c}<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> a)e.<span class="pl-s3">call</span>(a,b)<span class="pl-k">&amp;&amp;</span>(c[b]<span class="pl-k">=</span>a[b]);<span class="pl-s3">d</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-s3">c</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">d</span>;c.__super__<span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-k">return</span> c};<span class="pl-s3">Epoch.Chart</span>.<span class="pl-en">Plot</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-st">function</span> <span class="pl-en">a</span>(<span class="pl-vpf">k</span>){<span class="pl-s">var</span> f,c,u;<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>k<span class="pl-k">?</span>k<span class="pl-k">:</span>{};Epoch.Util.copy(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.margins);a.__super__.<span class="pl-sc">constructor</span>.<span class="pl-s3">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span>Epoch.Util.defaults(<span class="pl-v">this</span>.<span class="pl-sc">options</span>,b));<span class="pl-v">this</span>.margins<span class="pl-k">=</span>{};u<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>];f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span>u.<span class="pl-sc">length</span>;f<span class="pl-k">&lt;</span>c;f<span class="pl-k">++</span>)k<span class="pl-k">=</span>u[f],<span class="pl-v">this</span>.margins[k]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code js-file-line"><span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.margins<span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.margins[k]<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.margins[k]<span class="pl-k">:</span><span class="pl-v">this</span>.hasAxis(k)<span class="pl-k">?</span>d[k]<span class="pl-k">:</span><span class="pl-c1">6</span>;<span class="pl-v">this</span>.g<span class="pl-k">=</span><span class="pl-v">this</span>.svg.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-sc">left</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-sc">top</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.onAll(h)}<span class="pl-s">var</span> d,b,h;g(a,c);b<span class="pl-k">=</span>{domain<span class="pl-k">:</span><span class="pl-c1">null</span>,range<span class="pl-k">:</span><span class="pl-c1">null</span>,axes<span class="pl-k">:</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>],ticks<span class="pl-k">:</span>{top<span class="pl-k">:</span><span class="pl-c1">14</span>,bottom<span class="pl-k">:</span><span class="pl-c1">14</span>,left<span class="pl-k">:</span><span class="pl-c1">5</span>,right<span class="pl-k">:</span><span class="pl-c1">5</span>},tickFormats<span class="pl-k">:</span>{top<span class="pl-k">:</span>Epoch.Formats.regular,bottom<span class="pl-k">:</span>Epoch.Formats.regular,left<span class="pl-k">:</span>Epoch.Formats.si,right<span class="pl-k">:</span>Epoch.Formats.si}};d<span class="pl-k">=</span>{top<span class="pl-k">:</span><span class="pl-c1">25</span>,right<span class="pl-k">:</span><span class="pl-c1">50</span>,bottom<span class="pl-k">:</span><span class="pl-c1">25</span>,left<span class="pl-k">:</span><span class="pl-c1">50</span>};h<span class="pl-k">=</span>{<span class="pl-s1"><span class="pl-pds">&quot;</span>option:margins.top<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>marginsChanged<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>option:margins.right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>marginsChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:margins.bottom<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>marginsChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:margins.left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>marginsChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:axes<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>axesChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:ticks.top<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>ticksChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:ticks.right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>ticksChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:ticks.bottom<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>ticksChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:ticks.left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>ticksChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:tickFormats.top<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>tickFormatsChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:tickFormats.right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>tickFormatsChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:tickFormats.bottom<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>tickFormatsChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:tickFormats.left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>tickFormatsChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:domain<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>domainChanged<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>option:range<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>rangeChanged<span class="pl-pds">&quot;</span></span>};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setTickFormat</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">f</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">options</span>.tickFormats[a]<span class="pl-k">=</span>f};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">hasAxis</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.axes.<span class="pl-s3">indexOf</span>(a)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">innerWidth</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">-</span>(<span class="pl-v">this</span>.margins.<span class="pl-sc">left</span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-sc">right</span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">innerHeight</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">-</span>(<span class="pl-v">this</span>.margins.<span class="pl-sc">top</span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-sc">bottom</span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">x</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,f;a<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>(f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.<span class="pl-sc">domain</span>)<span class="pl-k">?</span>f<span class="pl-k">:</span><span class="pl-v">this</span>.extent(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">x</span>});<span class="pl-k">return</span> d3.scale.linear().<span class="pl-sc">domain</span>(a).range([<span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code js-file-line"><span class="pl-v">this</span>.<span class="pl-sc">innerWidth</span>()])};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">y</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,f;a<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>(f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.range)<span class="pl-k">?</span>f<span class="pl-k">:</span><span class="pl-v">this</span>.extent(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">y</span>});<span class="pl-k">return</span> d3.scale.linear().<span class="pl-sc">domain</span>(a).range([<span class="pl-v">this</span>.<span class="pl-sc">innerHeight</span>(),<span class="pl-c1">0</span>])};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">bottomAxis</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> d3.svg.<span class="pl-sc">axis</span>().scale(<span class="pl-v">this</span>.<span class="pl-sc">x</span>()).orient(<span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>).ticks(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.ticks.<span class="pl-sc">bottom</span>).tickFormat(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.tickFormats.<span class="pl-sc">bottom</span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">topAxis</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> d3.svg.<span class="pl-sc">axis</span>().scale(<span class="pl-v">this</span>.<span class="pl-sc">x</span>()).orient(<span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>).ticks(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.ticks.<span class="pl-sc">top</span>).tickFormat(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.tickFormats.<span class="pl-sc">top</span>)};</td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code js-file-line"><span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">leftAxis</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> d3.svg.<span class="pl-sc">axis</span>().scale(<span class="pl-v">this</span>.<span class="pl-sc">y</span>()).orient(<span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>).ticks(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.ticks.<span class="pl-sc">left</span>).tickFormat(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.tickFormats.<span class="pl-sc">left</span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">rightAxis</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> d3.svg.<span class="pl-sc">axis</span>().scale(<span class="pl-v">this</span>.<span class="pl-sc">y</span>()).orient(<span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>).ticks(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.ticks.<span class="pl-sc">right</span>).tickFormat(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.tickFormats.<span class="pl-sc">right</span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-v">this</span>._axesDrawn<span class="pl-k">?</span><span class="pl-v">this</span>._redrawAxes()<span class="pl-k">:</span><span class="pl-v">this</span>._drawAxes();<span class="pl-k">return</span> a.__super__.draw.<span class="pl-s3">call</span>(<span class="pl-v">this</span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_redrawAxes</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.x.axis.bottom<span class="pl-pds">&quot;</span></span>).transition().duration(<span class="pl-c1">500</span>).ease(<span class="pl-s1"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">call</span>(<span class="pl-v">this</span>.bottomAxis());</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code js-file-line"><span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.x.axis.top<span class="pl-pds">&quot;</span></span>).transition().duration(<span class="pl-c1">500</span>).ease(<span class="pl-s1"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">call</span>(<span class="pl-v">this</span>.topAxis());<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.y.axis.left<span class="pl-pds">&quot;</span></span>).transition().duration(<span class="pl-c1">500</span>).ease(<span class="pl-s1"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">call</span>(<span class="pl-v">this</span>.leftAxis());<span class="pl-k">if</span>(<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>))<span class="pl-k">return</span> <span class="pl-v">this</span>.g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.y.axis.right<span class="pl-pds">&quot;</span></span>).transition().duration(<span class="pl-c1">500</span>).ease(<span class="pl-s1"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">call</span>(<span class="pl-v">this</span>.rightAxis())};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_drawAxes</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.g.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>x axis bottom<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>translate(0, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code js-file-line"><span class="pl-v">this</span>.<span class="pl-sc">innerHeight</span>()<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">call</span>(<span class="pl-v">this</span>.bottomAxis());<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.g.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>x axis top<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">call</span>(<span class="pl-v">this</span>.topAxis());<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.g.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>y axis left<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">call</span>(<span class="pl-v">this</span>.leftAxis());<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.g.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>y axis right<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-sc">innerWidth</span>()<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>, 0)<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">call</span>(<span class="pl-v">this</span>.rightAxis());<span class="pl-k">return</span> <span class="pl-v">this</span>._axesDrawn<span class="pl-k">=!</span><span class="pl-c1">0</span>};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">dimensionsChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){a.__super__.dimensionsChanged.<span class="pl-s3">call</span>(<span class="pl-v">this</span>);<span class="pl-v">this</span>.g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.axis<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">remove</span>();</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code js-file-line"><span class="pl-v">this</span>._axesDrawn<span class="pl-k">=!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>.draw()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">marginsChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,f,b;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.margins){b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.margins;<span class="pl-k">for</span>(a <span class="pl-k">in</span> b)f<span class="pl-k">=</span>b[a],<span class="pl-v">this</span>.margins[a]<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">==</span>f<span class="pl-k">?</span><span class="pl-c1">6</span><span class="pl-k">:</span>f;<span class="pl-v">this</span>.g.transition().duration(<span class="pl-c1">750</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-sc">left</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-sc">top</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.draw()}};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">axesChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,f,b,c;c<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>];f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span>c.<span class="pl-sc">length</span>;f<span class="pl-k">&lt;</span>b;f<span class="pl-k">++</span>)<span class="pl-k">if</span>(a<span class="pl-k">=</span>c[f],<span class="pl-c1">null</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.margins<span class="pl-k">||</span><span class="pl-c1">null</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.margins[a])<span class="pl-v">this</span>.hasAxis(a)<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code js-file-line"><span class="pl-v">this</span>.margins[a]<span class="pl-k">=</span>d[a]<span class="pl-k">:</span><span class="pl-v">this</span>.margins[a]<span class="pl-k">=</span><span class="pl-c1">6</span>;<span class="pl-v">this</span>.g.transition().duration(<span class="pl-c1">750</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-sc">left</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-sc">top</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.axis<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">remove</span>();<span class="pl-v">this</span>._axesDrawn<span class="pl-k">=!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>.draw()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">ticksChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.draw()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">tickFormatsChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.draw()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">domainChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.draw()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">rangeChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.draw()};<span class="pl-k">return</span> a}(Epoch.Chart.SVG)}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s">var</span> e<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>){<span class="pl-st">function</span> <span class="pl-en">d</span>(){<span class="pl-v">this</span>.<span class="pl-sc">constructor</span><span class="pl-k">=</span>c}<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> a)e.<span class="pl-s3">call</span>(a,b)<span class="pl-k">&amp;&amp;</span>(c[b]<span class="pl-k">=</span>a[b]);<span class="pl-s3">d</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-s3">c</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">d</span>;c.__super__<span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-k">return</span> c};<span class="pl-s3">Epoch.Chart</span>.<span class="pl-en">Area</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-st">function</span> <span class="pl-en">a</span>(){<span class="pl-k">return</span> a.__super__.<span class="pl-sc">constructor</span>.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>,arguments)}g(a,c);<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">y</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,b,c,k,f,q,u,m;a<span class="pl-k">=</span>[];q<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>;k<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(f<span class="pl-k">=</span>q.<span class="pl-sc">length</span>;k<span class="pl-k">&lt;</span>f;k<span class="pl-k">++</span>)<span class="pl-k">for</span>(b <span class="pl-k">in</span> c<span class="pl-k">=</span>q[k],u<span class="pl-k">=</span>c.values,u)c<span class="pl-k">=</span>u[b],<span class="pl-c1">null</span><span class="pl-k">!=</span>a[b]<span class="pl-k">&amp;&amp;</span>(a[b]<span class="pl-k">+=</span>c.<span class="pl-sc">y</span>),<span class="pl-c1">null</span><span class="pl-k">==</span>a[b]<span class="pl-k">&amp;&amp;</span>(a[b]<span class="pl-k">=</span>c.<span class="pl-sc">y</span>);<span class="pl-k">return</span> d3.scale.linear().<span class="pl-sc">domain</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span></td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code js-file-line">(m<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.range)<span class="pl-k">?</span>m<span class="pl-k">:</span>[<span class="pl-c1">0</span>,d3.<span class="pl-s3">max</span>(a)]).range([<span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">-</span><span class="pl-v">this</span>.margins.<span class="pl-sc">top</span><span class="pl-k">-</span><span class="pl-v">this</span>.margins.<span class="pl-sc">bottom</span>,<span class="pl-c1">0</span>])};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> d,b,c,k;b<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-sc">x</span>(),<span class="pl-v">this</span>.<span class="pl-sc">y</span>()];c<span class="pl-k">=</span>b[<span class="pl-c1">0</span>];k<span class="pl-k">=</span>b[<span class="pl-c1">1</span>];d<span class="pl-k">=</span>d3.svg.area().<span class="pl-sc">x</span>(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> c(a.<span class="pl-sc">x</span>)}).y0(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> k(a.y0)}).y1(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> k(a.y0<span class="pl-k">+</span>a.<span class="pl-sc">y</span>)});d3.layout.stack().values(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.values})(<span class="pl-v">this</span>.<span class="pl-sc">data</span>);<span class="pl-v">this</span>.g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.layer<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">remove</span>();b<span class="pl-k">=</span><span class="pl-v">this</span>.g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.layer<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">data</span>(<span class="pl-v">this</span>.<span class="pl-sc">data</span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.category});b.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>.area<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> d(a.values)});</td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code js-file-line">b.enter().append(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">className</span>});b.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>area<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> d(a.values)});<span class="pl-k">return</span> a.__super__.draw.<span class="pl-s3">call</span>(<span class="pl-v">this</span>)};<span class="pl-k">return</span> a}(Epoch.Chart.Plot)}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s">var</span> e<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>){<span class="pl-st">function</span> <span class="pl-en">d</span>(){<span class="pl-v">this</span>.<span class="pl-sc">constructor</span><span class="pl-k">=</span>c}<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> a)e.<span class="pl-s3">call</span>(a,b)<span class="pl-k">&amp;&amp;</span>(c[b]<span class="pl-k">=</span>a[b]);<span class="pl-s3">d</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-s3">c</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">d</span>;c.__super__<span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-k">return</span> c};<span class="pl-s3">Epoch.Chart</span>.<span class="pl-en">Bar</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-st">function</span> <span class="pl-en">a</span>(<span class="pl-vpf">k</span>){<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>k<span class="pl-k">?</span>k<span class="pl-k">:</span>{};<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>horizontal<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.orientation<span class="pl-k">?</span>Epoch.Util.defaults(<span class="pl-v">this</span>.<span class="pl-sc">options</span>,b)<span class="pl-k">:</span>Epoch.Util.defaults(<span class="pl-v">this</span>.<span class="pl-sc">options</span>,d);a.__super__.<span class="pl-sc">constructor</span>.<span class="pl-s3">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-sc">options</span>);<span class="pl-v">this</span>.onAll(h)}<span class="pl-s">var</span> d,b,h;g(a,c);d<span class="pl-k">=</span>{style<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>grouped<span class="pl-pds">&quot;</span></span>,orientation<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>vertical<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code js-file-line">padding<span class="pl-k">:</span>{bar<span class="pl-k">:</span><span class="pl-c1">0.08</span>,group<span class="pl-k">:</span><span class="pl-c1">0.1</span>},outerPadding<span class="pl-k">:</span>{bar<span class="pl-k">:</span><span class="pl-c1">0.08</span>,group<span class="pl-k">:</span><span class="pl-c1">0.1</span>}};b<span class="pl-k">=</span>Epoch.Util.defaults({tickFormats<span class="pl-k">:</span>{top<span class="pl-k">:</span>Epoch.Formats.si,bottom<span class="pl-k">:</span>Epoch.Formats.si,left<span class="pl-k">:</span>Epoch.Formats.regular,right<span class="pl-k">:</span>Epoch.Formats.regular}},d);h<span class="pl-k">=</span>{<span class="pl-s1"><span class="pl-pds">&quot;</span>option:orientation<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>orientationChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:padding<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>paddingChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:outerPadding<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>paddingChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:padding:bar<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>paddingChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:padding:group<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>paddingChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:outerPadding:bar<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>paddingChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:outerPadding:group<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>paddingChanged<span class="pl-pds">&quot;</span></span>};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">x</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code js-file-line"><span class="pl-st">function</span>(){<span class="pl-s">var</span> a;<span class="pl-k">if</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>vertical<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.orientation)<span class="pl-k">return</span> d3.scale.ordinal().<span class="pl-sc">domain</span>(Epoch.Util.<span class="pl-sc">domain</span>(<span class="pl-v">this</span>.<span class="pl-sc">data</span>)).rangeRoundBands([<span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-sc">innerWidth</span>()],<span class="pl-v">this</span>.<span class="pl-sc">options</span>.padding.group,<span class="pl-v">this</span>.<span class="pl-sc">options</span>.outerPadding.group);a<span class="pl-k">=</span><span class="pl-v">this</span>.extent(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">y</span>});a[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(<span class="pl-c1">0</span>,a[<span class="pl-c1">0</span>]);<span class="pl-k">return</span> d3.scale.linear().<span class="pl-sc">domain</span>(a).range([<span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">-</span><span class="pl-v">this</span>.margins.<span class="pl-sc">left</span><span class="pl-k">-</span><span class="pl-v">this</span>.margins.<span class="pl-sc">right</span>])};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">x1</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> f;<span class="pl-k">return</span> d3.scale.ordinal().<span class="pl-sc">domain</span>(<span class="pl-st">function</span>(){<span class="pl-s">var</span> a,k,b,d;b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>;d<span class="pl-k">=</span>[];a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(k<span class="pl-k">=</span>b.<span class="pl-sc">length</span>;a<span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code js-file-line">k;a<span class="pl-k">++</span>)f<span class="pl-k">=</span>b[a],d.<span class="pl-s3">push</span>(f.category);<span class="pl-k">return</span> d}.<span class="pl-s3">call</span>(<span class="pl-v">this</span>)).rangeRoundBands([<span class="pl-c1">0</span>,a.rangeBand()],<span class="pl-v">this</span>.<span class="pl-sc">options</span>.padding.bar,<span class="pl-v">this</span>.<span class="pl-sc">options</span>.outerPadding.bar)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">y</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a;<span class="pl-k">return</span><span class="pl-s1"><span class="pl-pds">&quot;</span>vertical<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.orientation<span class="pl-k">?</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.extent(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">y</span>}),a[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(<span class="pl-c1">0</span>,a[<span class="pl-c1">0</span>]),d3.scale.linear().<span class="pl-sc">domain</span>(a).range([<span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">-</span><span class="pl-v">this</span>.margins.<span class="pl-sc">top</span><span class="pl-k">-</span><span class="pl-v">this</span>.margins.<span class="pl-sc">bottom</span>,<span class="pl-c1">0</span>]))<span class="pl-k">:</span>d3.scale.ordinal().<span class="pl-sc">domain</span>(Epoch.Util.<span class="pl-sc">domain</span>(<span class="pl-v">this</span>.<span class="pl-sc">data</span>)).rangeRoundBands([<span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-sc">innerHeight</span>()],<span class="pl-v">this</span>.<span class="pl-sc">options</span>.padding.group,<span class="pl-v">this</span>.<span class="pl-sc">options</span>.outerPadding.group)};</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code js-file-line"><span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">y1</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> f;<span class="pl-k">return</span> d3.scale.ordinal().<span class="pl-sc">domain</span>(<span class="pl-st">function</span>(){<span class="pl-s">var</span> a,k,b,d;b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>;d<span class="pl-k">=</span>[];a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(k<span class="pl-k">=</span>b.<span class="pl-sc">length</span>;a<span class="pl-k">&lt;</span>k;a<span class="pl-k">++</span>)f<span class="pl-k">=</span>b[a],d.<span class="pl-s3">push</span>(f.category);<span class="pl-k">return</span> d}.<span class="pl-s3">call</span>(<span class="pl-v">this</span>)).rangeRoundBands([<span class="pl-c1">0</span>,a.rangeBand()],<span class="pl-v">this</span>.<span class="pl-sc">options</span>.padding.bar,<span class="pl-v">this</span>.<span class="pl-sc">options</span>.outerPadding.bar)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_remapData</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,f,b,d,c,h,n,e,g,s,t,v;c<span class="pl-k">=</span>{};t<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>;h<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(e<span class="pl-k">=</span>t.<span class="pl-sc">length</span>;h<span class="pl-k">&lt;</span>e;h<span class="pl-k">++</span>)<span class="pl-k">for</span>(d<span class="pl-k">=</span>t[h],a<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>bar <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d.<span class="pl-sc">className</span>.<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">*</span>layer<span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-pds">/</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),v<span class="pl-k">=</span>d.values,n<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span>v.<span class="pl-sc">length</span>;n<span class="pl-k">&lt;</span>g;n<span class="pl-k">++</span>)f<span class="pl-k">=</span>v[n],<span class="pl-c1">null</span><span class="pl-k">==</span>c[s<span class="pl-k">=</span>f.<span class="pl-sc">x</span>]<span class="pl-k">&amp;&amp;</span>(c[s]<span class="pl-k">=</span>[]),</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code js-file-line">c[f.<span class="pl-sc">x</span>].<span class="pl-s3">push</span>({label<span class="pl-k">:</span>d.category,y<span class="pl-k">:</span>f.<span class="pl-sc">y</span>,className<span class="pl-k">:</span>a});f<span class="pl-k">=</span>[];<span class="pl-k">for</span>(b <span class="pl-k">in</span> c)a<span class="pl-k">=</span>c[b],f.<span class="pl-s3">push</span>({group<span class="pl-k">:</span>b,values<span class="pl-k">:</span>a});<span class="pl-k">return</span> f};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s1"><span class="pl-pds">&quot;</span>horizontal<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.orientation<span class="pl-k">?</span><span class="pl-v">this</span>._drawHorizontal()<span class="pl-k">:</span><span class="pl-v">this</span>._drawVertical();<span class="pl-k">return</span> a.__super__.draw.<span class="pl-s3">call</span>(<span class="pl-v">this</span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_drawVertical</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,b,d,c,h,l;a<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-sc">x</span>(),<span class="pl-v">this</span>.<span class="pl-sc">y</span>()];c<span class="pl-k">=</span>a[<span class="pl-c1">0</span>];l<span class="pl-k">=</span>a[<span class="pl-c1">1</span>];h<span class="pl-k">=</span><span class="pl-v">this</span>.x1(c);b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">-</span><span class="pl-v">this</span>.margins.<span class="pl-sc">top</span><span class="pl-k">-</span><span class="pl-v">this</span>.margins.<span class="pl-sc">bottom</span>;a<span class="pl-k">=</span><span class="pl-v">this</span>._remapData();a<span class="pl-k">=</span><span class="pl-v">this</span>.g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.layer<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">data</span>(a,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.group});a.transition().duration(<span class="pl-c1">750</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code js-file-line"><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span><span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c(a.group)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>, 0)<span class="pl-pds">&quot;</span></span>});a.enter().append(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>layer<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span><span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c(a.group)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>, 0)<span class="pl-pds">&quot;</span></span>});d<span class="pl-k">=</span>a.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">data</span>(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.values});d.transition().duration(<span class="pl-c1">600</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> h(a.<span class="pl-sc">label</span>)}).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> l(a.<span class="pl-sc">y</span>)}).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,h.rangeBand()).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> b<span class="pl-k">-</span>l(a.<span class="pl-sc">y</span>)});d.enter().append(<span class="pl-s1"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">className</span>}).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> h(a.<span class="pl-sc">label</span>)}).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code js-file-line"><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> l(a.<span class="pl-sc">y</span>)}).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,h.rangeBand()).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> b<span class="pl-k">-</span>l(a.<span class="pl-sc">y</span>)});d.exit().transition().duration(<span class="pl-c1">150</span>).<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">remove</span>();<span class="pl-k">return</span> a.exit().transition().duration(<span class="pl-c1">750</span>).<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">remove</span>()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_drawHorizontal</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,b,d,c,h;a<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-sc">x</span>(),<span class="pl-v">this</span>.<span class="pl-sc">y</span>()];d<span class="pl-k">=</span>a[<span class="pl-c1">0</span>];c<span class="pl-k">=</span>a[<span class="pl-c1">1</span>];h<span class="pl-k">=</span><span class="pl-v">this</span>.y1(c);a<span class="pl-k">=</span><span class="pl-v">this</span>._remapData();a<span class="pl-k">=</span><span class="pl-v">this</span>.g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.layer<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">data</span>(a,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.group});a.transition().duration(<span class="pl-c1">750</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span><span class="pl-s1"><span class="pl-pds">&quot;</span>translate(0, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code js-file-line">c(a.group)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>});a.enter().append(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>layer<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span><span class="pl-s1"><span class="pl-pds">&quot;</span>translate(0, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c(a.group)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>});b<span class="pl-k">=</span>a.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">data</span>(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.values});b.transition().duration(<span class="pl-c1">600</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span>}).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> h(a.<span class="pl-sc">label</span>)}).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,h.rangeBand()).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> d(a.<span class="pl-sc">y</span>)});b.enter().append(<span class="pl-s1"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">className</span>}).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span>}).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> h(a.<span class="pl-sc">label</span>)}).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code js-file-line">h.rangeBand()).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> d(a.<span class="pl-sc">y</span>)});b.exit().transition().duration(<span class="pl-c1">150</span>).<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">remove</span>();<span class="pl-k">return</span> a.exit().transition().duration(<span class="pl-c1">750</span>).<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">remove</span>()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">orientationChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,b,d,c;c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.tickFormats.<span class="pl-sc">top</span>;a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.tickFormats.<span class="pl-sc">bottom</span>;b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.tickFormats.<span class="pl-sc">left</span>;d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.tickFormats.<span class="pl-sc">right</span>;<span class="pl-v">this</span>.<span class="pl-sc">options</span>.tickFormats.<span class="pl-sc">left</span><span class="pl-k">=</span>c;<span class="pl-v">this</span>.<span class="pl-sc">options</span>.tickFormats.<span class="pl-sc">right</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-sc">options</span>.tickFormats.<span class="pl-sc">top</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.<span class="pl-sc">options</span>.tickFormats.<span class="pl-sc">bottom</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code js-file-line">d;<span class="pl-k">return</span> <span class="pl-v">this</span>.draw()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">paddingChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.draw()};<span class="pl-k">return</span> a}(Epoch.Chart.Plot)}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s">var</span> e<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>){<span class="pl-st">function</span> <span class="pl-en">d</span>(){<span class="pl-v">this</span>.<span class="pl-sc">constructor</span><span class="pl-k">=</span>c}<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> a)e.<span class="pl-s3">call</span>(a,b)<span class="pl-k">&amp;&amp;</span>(c[b]<span class="pl-k">=</span>a[b]);<span class="pl-s3">d</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-s3">c</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">d</span>;c.__super__<span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-k">return</span> c};<span class="pl-s3">Epoch.Chart</span>.<span class="pl-en">Line</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-st">function</span> <span class="pl-en">a</span>(){<span class="pl-k">return</span> a.__super__.<span class="pl-sc">constructor</span>.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>,arguments)}g(a,c);<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">line</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,b,c;c<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-sc">x</span>(),<span class="pl-v">this</span>.<span class="pl-sc">y</span>()];a<span class="pl-k">=</span>c[<span class="pl-c1">0</span>];b<span class="pl-k">=</span>c[<span class="pl-c1">1</span>];<span class="pl-k">return</span> d3.svg.line().<span class="pl-sc">x</span>(<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">return</span> a(b.<span class="pl-sc">x</span>)}}(<span class="pl-v">this</span>)).<span class="pl-sc">y</span>(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> b(a.<span class="pl-sc">y</span>)}}(<span class="pl-v">this</span>))};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code js-file-line"><span class="pl-st">function</span>(){<span class="pl-s">var</span> c,b;b<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-sc">x</span>(),<span class="pl-v">this</span>.<span class="pl-sc">y</span>(),<span class="pl-v">this</span>.line()][<span class="pl-c1">2</span>];c<span class="pl-k">=</span><span class="pl-v">this</span>.g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.layer<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">data</span>(<span class="pl-v">this</span>.<span class="pl-sc">data</span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.category});c.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>.line<span class="pl-pds">&quot;</span></span>).transition().duration(<span class="pl-c1">500</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> b(a.values)});c.enter().append(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">className</span>}).append(<span class="pl-s1"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> b(a.values)});c.exit().transition().duration(<span class="pl-c1">750</span>).<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">remove</span>();<span class="pl-k">return</span> a.__super__.draw.<span class="pl-s3">call</span>(<span class="pl-v">this</span>)};<span class="pl-k">return</span> a}(Epoch.Chart.Plot)}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s">var</span> e<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>){<span class="pl-st">function</span> <span class="pl-en">d</span>(){<span class="pl-v">this</span>.<span class="pl-sc">constructor</span><span class="pl-k">=</span>c}<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> a)e.<span class="pl-s3">call</span>(a,b)<span class="pl-k">&amp;&amp;</span>(c[b]<span class="pl-k">=</span>a[b]);<span class="pl-s3">d</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-s3">c</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">d</span>;c.__super__<span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-k">return</span> c};<span class="pl-s3">Epoch.Chart</span>.<span class="pl-en">Pie</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-st">function</span> <span class="pl-en">a</span>(<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>b<span class="pl-k">?</span>b<span class="pl-k">:</span>{};a.__super__.<span class="pl-sc">constructor</span>.<span class="pl-s3">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span>Epoch.Util.defaults(<span class="pl-v">this</span>.<span class="pl-sc">options</span>,d));<span class="pl-v">this</span>.pie<span class="pl-k">=</span>d3.layout.pie().<span class="pl-s3">sort</span>(<span class="pl-c1">null</span>).<span class="pl-sc">value</span>(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">value</span>});<span class="pl-v">this</span>.arc<span class="pl-k">=</span>d3.svg.arc().outerRadius(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(a.<span class="pl-sc">width</span>,</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code js-file-line">a.<span class="pl-sc">height</span>)/<span class="pl-c1">2</span><span class="pl-k">-</span>a.<span class="pl-sc">options</span>.margin}}(<span class="pl-v">this</span>)).innerRadius(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-st">function</span>(){<span class="pl-k">return</span> a.<span class="pl-sc">options</span>.inner}}(<span class="pl-v">this</span>));<span class="pl-v">this</span>.g<span class="pl-k">=</span><span class="pl-v">this</span>.svg.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-sc">width</span>/<span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-sc">height</span>/<span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.on(<span class="pl-s1"><span class="pl-pds">&quot;</span>option:margin<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>marginChanged<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.on(<span class="pl-s1"><span class="pl-pds">&quot;</span>option:inner<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>innerChanged<span class="pl-pds">&quot;</span></span>)}<span class="pl-s">var</span> d;g(a,c);d<span class="pl-k">=</span>{margin<span class="pl-k">:</span><span class="pl-c1">10</span>,inner<span class="pl-k">:</span><span class="pl-c1">0</span>};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> b;<span class="pl-v">this</span>.g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.arc<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">remove</span>();b<span class="pl-k">=</span><span class="pl-v">this</span>.g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.arc<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">data</span>(<span class="pl-v">this</span>.pie(<span class="pl-v">this</span>.<span class="pl-sc">data</span>),<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">data</span>.category});b.enter().append(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code js-file-line"><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span><span class="pl-s1"><span class="pl-pds">&quot;</span>arc pie <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a.<span class="pl-sc">data</span>.<span class="pl-sc">className</span>});b.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.arc);b.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">return</span><span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a.arc.centroid(b)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>}}(<span class="pl-v">this</span>)).<span class="pl-sc">text</span>(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">data</span>.<span class="pl-sc">label</span><span class="pl-k">||</span>a.<span class="pl-sc">data</span>.category});b.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.arc).each(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>._current<span class="pl-k">=</span>a});b.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">return</span><span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a.arc.centroid(b)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>}}(<span class="pl-v">this</span>)).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>dy<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>.35em<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>text-anchor<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">text</span>(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">data</span>.<span class="pl-sc">label</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code js-file-line">a.<span class="pl-sc">data</span>.category});<span class="pl-k">return</span> a.__super__.draw.<span class="pl-s3">call</span>(<span class="pl-v">this</span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">marginChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.draw()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">innerChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.draw()};<span class="pl-k">return</span> a}(Epoch.Chart.SVG)}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s">var</span> e<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>){<span class="pl-st">function</span> <span class="pl-en">d</span>(){<span class="pl-v">this</span>.<span class="pl-sc">constructor</span><span class="pl-k">=</span>c}<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> a)e.<span class="pl-s3">call</span>(a,b)<span class="pl-k">&amp;&amp;</span>(c[b]<span class="pl-k">=</span>a[b]);<span class="pl-s3">d</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-s3">c</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">d</span>;c.__super__<span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-k">return</span> c};<span class="pl-s3">Epoch.Chart</span>.<span class="pl-en">Scatter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-st">function</span> <span class="pl-en">a</span>(<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>b<span class="pl-k">?</span>b<span class="pl-k">:</span>{};a.__super__.<span class="pl-sc">constructor</span>.<span class="pl-s3">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span>Epoch.Util.defaults(<span class="pl-v">this</span>.<span class="pl-sc">options</span>,d));<span class="pl-v">this</span>.on(<span class="pl-s1"><span class="pl-pds">&quot;</span>option:radius<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>radiusChanged<span class="pl-pds">&quot;</span></span>)}<span class="pl-s">var</span> d;g(a,c);d<span class="pl-k">=</span>{radius<span class="pl-k">:</span><span class="pl-c1">3.5</span>,axes<span class="pl-k">:</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>]};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> b,c,k,f,</td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code js-file-line">d;b<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-sc">x</span>(),<span class="pl-v">this</span>.<span class="pl-sc">y</span>()];f<span class="pl-k">=</span>b[<span class="pl-c1">0</span>];d<span class="pl-k">=</span>b[<span class="pl-c1">1</span>];k<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.radius;c<span class="pl-k">=</span><span class="pl-v">this</span>.g.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.layer<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">data</span>(<span class="pl-v">this</span>.<span class="pl-sc">data</span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.category});c.enter().append(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">className</span>});b<span class="pl-k">=</span>c.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.dot<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">data</span>(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.values});b.transition().duration(<span class="pl-c1">500</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b;<span class="pl-k">return</span> <span class="pl-c1">null</span><span class="pl-k">!=</span>(b<span class="pl-k">=</span>a.r)<span class="pl-k">?</span>b<span class="pl-k">:</span>k}).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>cx<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> f(a.<span class="pl-sc">x</span>)}).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>cy<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> d(a.<span class="pl-sc">y</span>)});b.enter().append(<span class="pl-s1"><span class="pl-pds">&quot;</span>circle<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>dot<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b;<span class="pl-k">return</span> <span class="pl-c1">null</span><span class="pl-k">!=</span></td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code js-file-line">(b<span class="pl-k">=</span>a.r)<span class="pl-k">?</span>b<span class="pl-k">:</span>k}).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>cx<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> f(a.<span class="pl-sc">x</span>)}).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>cy<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> d(a.<span class="pl-sc">y</span>)});b.exit().transition().duration(<span class="pl-c1">750</span>).<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>).<span class="pl-s3">remove</span>();c.exit().transition().duration(<span class="pl-c1">750</span>).<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>).<span class="pl-s3">remove</span>();<span class="pl-k">return</span> a.__super__.draw.<span class="pl-s3">call</span>(<span class="pl-v">this</span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">radiusChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.draw()};<span class="pl-k">return</span> a}(Epoch.Chart.Plot)}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s">var</span> e<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>){<span class="pl-st">function</span> <span class="pl-en">d</span>(){<span class="pl-v">this</span>.<span class="pl-sc">constructor</span><span class="pl-k">=</span>c}<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> a)e.<span class="pl-s3">call</span>(a,b)<span class="pl-k">&amp;&amp;</span>(c[b]<span class="pl-k">=</span>a[b]);<span class="pl-s3">d</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-s3">c</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">d</span>;c.__super__<span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-k">return</span> c};<span class="pl-s3">Epoch.Time</span>.<span class="pl-en">Plot</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-st">function</span> <span class="pl-en">a</span>(<span class="pl-vpf">k</span>){<span class="pl-s">var</span> f,c,u;<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span>k;Epoch.Util.copy(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.margins);a.__super__.<span class="pl-sc">constructor</span>.<span class="pl-s3">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span>Epoch.Util.defaults(<span class="pl-v">this</span>.<span class="pl-sc">options</span>,b));<span class="pl-v">this</span>._queue<span class="pl-k">=</span>[];<span class="pl-v">this</span>.margins<span class="pl-k">=</span>{};u<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>];f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span>u.<span class="pl-sc">length</span>;f<span class="pl-k">&lt;</span>c;f<span class="pl-k">++</span>)k<span class="pl-k">=</span>u[f],<span class="pl-v">this</span>.margins[k]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code js-file-line"><span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.margins<span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.margins[k]<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.margins[k]<span class="pl-k">:</span><span class="pl-v">this</span>.hasAxis(k)<span class="pl-k">?</span>d[k]<span class="pl-k">:</span><span class="pl-c1">6</span>;<span class="pl-v">this</span>.svg<span class="pl-k">=</span><span class="pl-v">this</span>.el.insert(<span class="pl-s1"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>:first-child<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-sc">width</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-sc">height</span>).<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>z-index<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>1000<span class="pl-pds">&quot;</span></span>);<span class="pl-s1"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-v">this</span>.el.<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-s1"><span class="pl-pds">&quot;</span>relative<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-v">this</span>.el.<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.el.<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>relative<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.canvas.<span class="pl-sc">style</span>({position<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>z-index<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>999<span class="pl-pds">&quot;</span></span>});<span class="pl-v">this</span>._sizeCanvas();<span class="pl-v">this</span>.animation<span class="pl-k">=</span>{interval<span class="pl-k">:</span><span class="pl-c1">null</span>,active<span class="pl-k">:!</span><span class="pl-c1">1</span>,<span class="pl-en">delta</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-st">function</span>(){<span class="pl-k">return</span><span class="pl-k">-</span>(a.w()/</td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code js-file-line">a.<span class="pl-sc">options</span>.fps)}}(<span class="pl-v">this</span>),<span class="pl-en">tickDelta</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-st">function</span>(){<span class="pl-k">return</span><span class="pl-k">-</span>(a.w()/a.pixelRatio/a.<span class="pl-sc">options</span>.fps)}}(<span class="pl-v">this</span>),frame<span class="pl-k">:</span><span class="pl-c1">0</span>,duration<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.fps};<span class="pl-v">this</span>._buildAxes();<span class="pl-s3">this</span>.<span class="pl-en">animationCallback</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-st">function</span>(){<span class="pl-k">return</span> a._animate()}}(<span class="pl-v">this</span>);<span class="pl-v">this</span>.onAll(h)}<span class="pl-s">var</span> d,b,h;g(a,c);b<span class="pl-k">=</span>{fps<span class="pl-k">:</span><span class="pl-c1">24</span>,historySize<span class="pl-k">:</span><span class="pl-c1">120</span>,windowSize<span class="pl-k">:</span><span class="pl-c1">40</span>,queueSize<span class="pl-k">:</span><span class="pl-c1">10</span>,axes<span class="pl-k">:</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>],ticks<span class="pl-k">:</span>{time<span class="pl-k">:</span><span class="pl-c1">15</span>,left<span class="pl-k">:</span><span class="pl-c1">5</span>,right<span class="pl-k">:</span><span class="pl-c1">5</span>},tickFormats<span class="pl-k">:</span>{top<span class="pl-k">:</span>Epoch.Formats.seconds,bottom<span class="pl-k">:</span>Epoch.Formats.seconds,left<span class="pl-k">:</span>Epoch.Formats.si,right<span class="pl-k">:</span>Epoch.Formats.si}};d<span class="pl-k">=</span>{top<span class="pl-k">:</span><span class="pl-c1">25</span>,</td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code js-file-line">right<span class="pl-k">:</span><span class="pl-c1">50</span>,bottom<span class="pl-k">:</span><span class="pl-c1">25</span>,left<span class="pl-k">:</span><span class="pl-c1">50</span>};h<span class="pl-k">=</span>{<span class="pl-s1"><span class="pl-pds">&quot;</span>option:margins<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>marginsChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:margins.top<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>marginsChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:margins.right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>marginsChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:margins.bottom<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>marginsChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:margins.left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>marginsChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:axes<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>axesChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:ticks<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>ticksChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:ticks.top<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>ticksChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:ticks.right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>ticksChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:ticks.bottom<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>ticksChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:ticks.left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>ticksChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:tickFormats<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>tickFormatsChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:tickFormats.top<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>tickFormatsChanged<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>option:tickFormats.right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>tickFormatsChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:tickFormats.bottom<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>tickFormatsChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:tickFormats.left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>tickFormatsChanged<span class="pl-pds">&quot;</span></span>};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_sizeCanvas</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-v">this</span>.canvas.attr({width<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-sc">innerWidth</span>(),height<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-sc">innerHeight</span>()});<span class="pl-k">return</span> <span class="pl-v">this</span>.canvas.<span class="pl-sc">style</span>({width<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-sc">innerWidth</span>()/<span class="pl-v">this</span>.pixelRatio<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-sc">innerHeight</span>()/<span class="pl-v">this</span>.pixelRatio<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-sc">top</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,left<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-sc">left</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>})};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_buildAxes</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-v">this</span>.svg.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.axis<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">remove</span>();</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code js-file-line"><span class="pl-v">this</span>._prepareTimeAxes();<span class="pl-k">return</span> <span class="pl-v">this</span>._prepareRangeAxes()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setData</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b,c,d,h,e;<span class="pl-v">this</span>.<span class="pl-sc">data</span><span class="pl-k">=</span>[];e<span class="pl-k">=</span>[];<span class="pl-k">for</span>(d <span class="pl-k">in</span> a)h<span class="pl-k">=</span>a[d],c<span class="pl-k">=</span>Epoch.Util.copy(h),b<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(<span class="pl-c1">0</span>,h.values.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.historySize),c.values<span class="pl-k">=</span>h.values.<span class="pl-s3">slice</span>(b),b<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>layer<span class="pl-pds">&quot;</span></span>],b.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>category<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>((d|<span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-c1">1</span>)),<span class="pl-c1">null</span><span class="pl-k">!=</span>h.<span class="pl-sc">label</span><span class="pl-k">&amp;&amp;</span>b.<span class="pl-s3">push</span>(Epoch.Util.dasherize(h.<span class="pl-sc">label</span>)),c.<span class="pl-sc">className</span><span class="pl-k">=</span>b.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>),e.<span class="pl-s3">push</span>(<span class="pl-v">this</span>.<span class="pl-sc">data</span>.<span class="pl-s3">push</span>(c));<span class="pl-k">return</span> e};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_offsetX</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">0</span>};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_prepareTimeAxes</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a;<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code js-file-line">(a<span class="pl-k">=</span><span class="pl-v">this</span>.bottomAxis<span class="pl-k">=</span><span class="pl-v">this</span>.svg.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>x axis bottom canvas<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-v">this</span>.margins.<span class="pl-sc">left</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-v">this</span>.<span class="pl-sc">innerHeight</span>()/<span class="pl-v">this</span>.pixelRatio<span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-sc">top</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>),a.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>domain<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>M0,0H<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-v">this</span>.<span class="pl-sc">innerWidth</span>()/<span class="pl-v">this</span>.pixelRatio<span class="pl-k">+</span><span class="pl-c1">1</span>)));<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.topAxis<span class="pl-k">=</span><span class="pl-v">this</span>.svg.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>x axis top canvas<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-v">this</span>.margins.<span class="pl-sc">left</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-sc">top</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>),a.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>domain<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>M0,0H<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-v">this</span>.<span class="pl-sc">innerWidth</span>()/<span class="pl-v">this</span>.pixelRatio<span class="pl-k">+</span><span class="pl-c1">1</span>)));<span class="pl-k">return</span> <span class="pl-v">this</span>._resetInitialTimeTicks()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_resetInitialTimeTicks</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,b,c,d,h;d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.ticks<span class="pl-s3">.time</span>;<span class="pl-v">this</span>._ticks<span class="pl-k">=</span>[];<span class="pl-v">this</span>._tickTimer<span class="pl-k">=</span>d;<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.bottomAxis<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.bottomAxis.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.tick<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">remove</span>();<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.topAxis<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.topAxis.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.tick<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">remove</span>();h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>;a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span>h.<span class="pl-sc">length</span>;a<span class="pl-k">&lt;</span>b;a<span class="pl-k">++</span>)<span class="pl-k">if</span>(c<span class="pl-k">=</span>h[a],<span class="pl-c1">null</span><span class="pl-k">!=</span>c.values<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>c.values.<span class="pl-sc">length</span>){b<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-sc">options</span>.windowSize<span class="pl-k">-</span><span class="pl-c1">1</span>,c.values.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>];a<span class="pl-k">=</span>b[<span class="pl-c1">0</span>];<span class="pl-k">for</span>(b<span class="pl-k">=</span>b[<span class="pl-c1">1</span>];<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>b;)<span class="pl-v">this</span>._pushTick(a,</td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code js-file-line">c.values[b]<span class="pl-s3">.time</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>),a<span class="pl-k">-=</span>d,b<span class="pl-k">-=</span>d;<span class="pl-k">break</span>}<span class="pl-k">return</span>[]};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_prepareRangeAxes</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.svg.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>y axis left<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-v">this</span>.margins.<span class="pl-sc">left</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-sc">top</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">call</span>(<span class="pl-v">this</span>.leftAxis());<span class="pl-k">if</span>(<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>))<span class="pl-k">return</span> <span class="pl-v">this</span>.svg.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>y axis right<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">-</span><span class="pl-v">this</span>.margins.<span class="pl-sc">right</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-sc">top</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">call</span>(<span class="pl-v">this</span>.rightAxis())};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">leftAxis</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,b;b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.ticks.<span class="pl-sc">left</span>;</td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code js-file-line">a<span class="pl-k">=</span>d3.svg.<span class="pl-sc">axis</span>().scale(<span class="pl-v">this</span>.ySvg()).orient(<span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>).tickFormat(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.tickFormats.<span class="pl-sc">left</span>);<span class="pl-k">return</span> <span class="pl-c1">2</span><span class="pl-k">===</span>b<span class="pl-k">?</span>a.tickValues(<span class="pl-v">this</span>.extent(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">y</span>}))<span class="pl-k">:</span>a.ticks(b)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">rightAxis</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,b;<span class="pl-v">this</span>.extent(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">y</span>});b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.ticks.<span class="pl-sc">right</span>;a<span class="pl-k">=</span>d3.svg.<span class="pl-sc">axis</span>().scale(<span class="pl-v">this</span>.ySvg()).orient(<span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>).tickFormat(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.tickFormats.<span class="pl-sc">left</span>);<span class="pl-k">return</span> <span class="pl-c1">2</span><span class="pl-k">===</span>b<span class="pl-k">?</span>a.tickValues(<span class="pl-v">this</span>.extent(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">y</span>}))<span class="pl-k">:</span>a.ticks(b)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">hasAxis</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.axes.<span class="pl-s3">indexOf</span>(a)};</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code js-file-line"><span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">innerWidth</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span>(<span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">-</span>(<span class="pl-v">this</span>.margins.<span class="pl-sc">left</span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-sc">right</span>))<span class="pl-k">*</span><span class="pl-v">this</span>.pixelRatio};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">innerHeight</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span>(<span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">-</span>(<span class="pl-v">this</span>.margins.<span class="pl-sc">top</span><span class="pl-k">+</span><span class="pl-v">this</span>.margins.<span class="pl-sc">bottom</span>))<span class="pl-k">*</span><span class="pl-v">this</span>.pixelRatio};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_prepareEntry</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_prepareLayers</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_startTransition</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.animation.active<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>._queue.<span class="pl-sc">length</span>)<span class="pl-k">return</span> <span class="pl-v">this</span>.trigger(<span class="pl-s1"><span class="pl-pds">&quot;</span>transition:start<span class="pl-pds">&quot;</span></span>),<span class="pl-v">this</span>._shift(),<span class="pl-v">this</span>.animation.active<span class="pl-k">=!</span><span class="pl-c1">0</span>,<span class="pl-v">this</span>.animation.interval<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code js-file-line"><span class="pl-s3">setInterval</span>(<span class="pl-v">this</span>.animationCallback,<span class="pl-c1">1E3</span>/<span class="pl-v">this</span>.<span class="pl-sc">options</span>.fps)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_stopTransition</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,b,c,d;<span class="pl-k">if</span>(<span class="pl-v">this</span>.inTransition()){d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>;b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span>d.<span class="pl-sc">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>)a<span class="pl-k">=</span>d[b],a.values.<span class="pl-sc">length</span><span class="pl-k">&gt;</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.windowSize<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>a.values.<span class="pl-s3">shift</span>();b<span class="pl-k">=</span>[<span class="pl-v">this</span>._ticks[<span class="pl-c1">0</span>],<span class="pl-v">this</span>._ticks[<span class="pl-v">this</span>._ticks.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]];a<span class="pl-k">=</span>b[<span class="pl-c1">0</span>];b<span class="pl-k">=</span>b[<span class="pl-c1">1</span>];<span class="pl-c1">null</span><span class="pl-k">!=</span>b<span class="pl-k">&amp;&amp;</span>b.enter<span class="pl-k">&amp;&amp;</span>(b.enter<span class="pl-k">=!</span><span class="pl-c1">1</span>,b.opacity<span class="pl-k">=</span><span class="pl-c1">1</span>);<span class="pl-c1">null</span><span class="pl-k">!=</span>a<span class="pl-k">&amp;&amp;</span>a.exit<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>._shiftTick();<span class="pl-v">this</span>.animation.<span class="pl-sc">frame</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.trigger(<span class="pl-s1"><span class="pl-pds">&quot;</span>transition:end<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-v">this</span>._queue.<span class="pl-sc">length</span>)<span class="pl-k">return</span> <span class="pl-v">this</span>._shift();<span class="pl-v">this</span>.animation.active<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-s3">clearInterval</span>(<span class="pl-v">this</span>.animation.interval)}};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">inTransition</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.animation.active};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">push</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a<span class="pl-k">=</span><span class="pl-v">this</span>._prepareLayers(a);<span class="pl-v">this</span>._queue.<span class="pl-sc">length</span><span class="pl-k">&gt;</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.queueSize<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>._queue.<span class="pl-s3">splice</span>(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.queueSize,<span class="pl-v">this</span>._queue.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.queueSize);<span class="pl-k">if</span>(<span class="pl-v">this</span>._queue.<span class="pl-sc">length</span><span class="pl-k">===</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.queueSize)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>._queue.<span class="pl-s3">push</span>(a.map(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">return</span> a._prepareEntry(b)}}(<span class="pl-v">this</span>)));<span class="pl-v">this</span>.trigger(<span class="pl-s1"><span class="pl-pds">&quot;</span>push<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.inTransition())<span class="pl-k">return</span> <span class="pl-v">this</span>._startTransition()};</td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code js-file-line"><span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_shift</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,b,c,d;<span class="pl-v">this</span>.trigger(<span class="pl-s1"><span class="pl-pds">&quot;</span>before:shift<span class="pl-pds">&quot;</span></span>);a<span class="pl-k">=</span><span class="pl-v">this</span>._queue.<span class="pl-s3">shift</span>();d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>;<span class="pl-k">for</span>(b <span class="pl-k">in</span> d)c<span class="pl-k">=</span>d[b],c.values.<span class="pl-s3">push</span>(a[b]);<span class="pl-v">this</span>._updateTicks(a[<span class="pl-c1">0</span>]<span class="pl-s3">.time</span>);<span class="pl-v">this</span>._transitionRangeAxes();<span class="pl-k">return</span> <span class="pl-v">this</span>.trigger(<span class="pl-s1"><span class="pl-pds">&quot;</span>after:shift<span class="pl-pds">&quot;</span></span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_transitionRangeAxes</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.svg.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.y.axis.left<span class="pl-pds">&quot;</span></span>).transition().duration(<span class="pl-c1">500</span>).ease(<span class="pl-s1"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">call</span>(<span class="pl-v">this</span>.leftAxis());<span class="pl-k">if</span>(<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>))<span class="pl-k">return</span> <span class="pl-v">this</span>.svg.selectAll(<span class="pl-s1"><span class="pl-pds">&quot;</span>.y.axis.right<span class="pl-pds">&quot;</span></span>).transition().duration(<span class="pl-c1">500</span>).ease(<span class="pl-s1"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">call</span>(<span class="pl-v">this</span>.rightAxis())};</td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code js-file-line"><span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_animate</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.inTransition())<span class="pl-k">return</span><span class="pl-k">++</span><span class="pl-v">this</span>.animation.<span class="pl-sc">frame</span><span class="pl-k">===</span><span class="pl-v">this</span>.animation.duration<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>._stopTransition(),<span class="pl-v">this</span>.draw(<span class="pl-v">this</span>.animation.<span class="pl-sc">frame</span><span class="pl-k">*</span><span class="pl-v">this</span>.animation.delta()),<span class="pl-v">this</span>._updateTimeAxes()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">y</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> d3.scale.linear().<span class="pl-sc">domain</span>(<span class="pl-v">this</span>.extent(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">y</span>})).range([<span class="pl-v">this</span>.<span class="pl-sc">innerHeight</span>(),<span class="pl-c1">0</span>])};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">ySvg</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> d3.scale.linear().<span class="pl-sc">domain</span>(<span class="pl-v">this</span>.extent(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">y</span>})).range([<span class="pl-v">this</span>.<span class="pl-sc">innerHeight</span>()/<span class="pl-v">this</span>.pixelRatio,<span class="pl-c1">0</span>])};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">w</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">innerWidth</span>()/</td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code js-file-line"><span class="pl-v">this</span>.<span class="pl-sc">options</span>.windowSize};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_updateTicks</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>))<span class="pl-k">if</span>(<span class="pl-k">++</span><span class="pl-v">this</span>._tickTimer<span class="pl-k">%</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.ticks<span class="pl-s3">.time</span><span class="pl-k">||</span><span class="pl-v">this</span>._pushTick(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.windowSize,a,<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-k">!</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-v">this</span>._ticks[<span class="pl-c1">0</span>].<span class="pl-sc">x</span><span class="pl-k">-</span><span class="pl-v">this</span>.w()/<span class="pl-v">this</span>.pixelRatio))<span class="pl-k">return</span> <span class="pl-v">this</span>._ticks[<span class="pl-c1">0</span>].exit<span class="pl-k">=!</span><span class="pl-c1">0</span>};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_pushTick</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-c1">null</span><span class="pl-k">==</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=!</span><span class="pl-c1">1</span>);<span class="pl-c1">null</span><span class="pl-k">==</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>))<span class="pl-k">return</span> b<span class="pl-k">=</span>{time<span class="pl-k">:</span>b,x<span class="pl-k">:</span>a<span class="pl-k">*</span>(<span class="pl-v">this</span>.w()/<span class="pl-v">this</span>.pixelRatio)<span class="pl-k">+</span><span class="pl-v">this</span>._offsetX(),opacity<span class="pl-k">:</span>c<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>,enter<span class="pl-k">:</span>c<span class="pl-k">?!</span><span class="pl-c1">0</span><span class="pl-k">:!</span><span class="pl-c1">1</span>,exit<span class="pl-k">:!</span><span class="pl-c1">1</span>},<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code js-file-line">(a<span class="pl-k">=</span><span class="pl-v">this</span>.bottomAxis.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>tick major<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(b.<span class="pl-sc">x</span><span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,0)<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,b.opacity),a.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y2<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">6</span>),a.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>text-anchor<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>dy<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">19</span>).<span class="pl-sc">text</span>(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.tickFormats.<span class="pl-sc">bottom</span>(b<span class="pl-s3">.time</span>)),b.bottomEl<span class="pl-k">=</span>a),<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.topAxis.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>tick major<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(b.<span class="pl-sc">x</span><span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,0)<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,b.opacity),a.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y2<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span><span class="pl-c1">6</span>),a.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>text-anchor<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>dy<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code js-file-line"><span class="pl-k">-</span><span class="pl-c1">10</span>).<span class="pl-sc">text</span>(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.tickFormats.<span class="pl-sc">top</span>(b<span class="pl-s3">.time</span>)),b.topEl<span class="pl-k">=</span>a),d<span class="pl-k">?</span><span class="pl-v">this</span>._ticks.<span class="pl-s3">unshift</span>(b)<span class="pl-k">:</span><span class="pl-v">this</span>._ticks.<span class="pl-s3">push</span>(b),b};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_shiftTick</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-v">this</span>._ticks.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>._ticks.<span class="pl-s3">shift</span>(),<span class="pl-c1">null</span><span class="pl-k">!=</span>a.topEl<span class="pl-k">&amp;&amp;</span>a.topEl.<span class="pl-s3">remove</span>(),<span class="pl-c1">null</span><span class="pl-k">!=</span>a.bottomEl))<span class="pl-k">return</span> a.bottomEl.<span class="pl-s3">remove</span>()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_updateTimeAxes</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,b,c,d,h,e,g;<span class="pl-k">if</span>(<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>)){a<span class="pl-k">=</span>[<span class="pl-v">this</span>.animation.tickDelta(),<span class="pl-c1">1</span>/<span class="pl-v">this</span>.<span class="pl-sc">options</span>.fps];b<span class="pl-k">=</span>a[<span class="pl-c1">0</span>];a<span class="pl-k">=</span>a[<span class="pl-c1">1</span>];e<span class="pl-k">=</span><span class="pl-v">this</span>._ticks;g<span class="pl-k">=</span>[];d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(h<span class="pl-k">=</span>e.<span class="pl-sc">length</span>;d<span class="pl-k">&lt;</span>h;d<span class="pl-k">++</span>)c<span class="pl-k">=</span>e[d],c.<span class="pl-sc">x</span><span class="pl-k">+=</span>b,</td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code js-file-line"><span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>c.bottomEl.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(c.<span class="pl-sc">x</span><span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,0)<span class="pl-pds">&quot;</span></span>),<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>c.topEl.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(c.<span class="pl-sc">x</span><span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,0)<span class="pl-pds">&quot;</span></span>),c.enter<span class="pl-k">?</span>c.opacity<span class="pl-k">+=</span>a<span class="pl-k">:</span>c.exit<span class="pl-k">&amp;&amp;</span>(c.opacity<span class="pl-k">-=</span>a),c.enter<span class="pl-k">||</span>c.exit<span class="pl-k">?</span>(<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>c.bottomEl.<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,c.opacity),<span class="pl-v">this</span>.hasAxis(<span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span>g.<span class="pl-s3">push</span>(c.topEl.<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,c.opacity))<span class="pl-k">:</span>g.<span class="pl-s3">push</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span>))<span class="pl-k">:</span>g.<span class="pl-s3">push</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span>);<span class="pl-k">return</span> g}};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">return</span> a.__super__.draw.<span class="pl-s3">call</span>(<span class="pl-v">this</span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">dimensionsChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){a.__super__.dimensionsChanged.<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code js-file-line"><span class="pl-v">this</span>.svg.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-sc">width</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-sc">height</span>);<span class="pl-v">this</span>._sizeCanvas();<span class="pl-v">this</span>._buildAxes();<span class="pl-k">return</span> <span class="pl-v">this</span>.draw(<span class="pl-v">this</span>.animation.<span class="pl-sc">frame</span><span class="pl-k">*</span><span class="pl-v">this</span>.animation.delta())};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">axesChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,b,c,h;h<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>];b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span>h.<span class="pl-sc">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>)<span class="pl-k">if</span>(a<span class="pl-k">=</span>h[b],<span class="pl-c1">null</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.margins<span class="pl-k">||</span><span class="pl-c1">null</span><span class="pl-k">==</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.margins[a])<span class="pl-v">this</span>.hasAxis(a)<span class="pl-k">?</span><span class="pl-v">this</span>.margins[a]<span class="pl-k">=</span>d[a]<span class="pl-k">:</span><span class="pl-v">this</span>.margins[a]<span class="pl-k">=</span><span class="pl-c1">6</span>;<span class="pl-v">this</span>._sizeCanvas();<span class="pl-v">this</span>._buildAxes();<span class="pl-k">return</span> <span class="pl-v">this</span>.draw(<span class="pl-v">this</span>.animation.<span class="pl-sc">frame</span><span class="pl-k">*</span><span class="pl-v">this</span>.animation.delta())};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">ticksChanged</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code js-file-line"><span class="pl-st">function</span>(){<span class="pl-v">this</span>._resetInitialTimeTicks();<span class="pl-v">this</span>._transitionRangeAxes();<span class="pl-k">return</span> <span class="pl-v">this</span>.draw(<span class="pl-v">this</span>.animation.<span class="pl-sc">frame</span><span class="pl-k">*</span><span class="pl-v">this</span>.animation.delta())};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">tickFormatsChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-v">this</span>._resetInitialTimeTicks();<span class="pl-v">this</span>._transitionRangeAxes();<span class="pl-k">return</span> <span class="pl-v">this</span>.draw(<span class="pl-v">this</span>.animation.<span class="pl-sc">frame</span><span class="pl-k">*</span><span class="pl-v">this</span>.animation.delta())};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">marginsChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,b,c;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.margins){c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.margins;<span class="pl-k">for</span>(a <span class="pl-k">in</span> c)b<span class="pl-k">=</span>c[a],<span class="pl-v">this</span>.margins[a]<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">==</span>b<span class="pl-k">?</span><span class="pl-c1">6</span><span class="pl-k">:</span>b;<span class="pl-v">this</span>._sizeCanvas();<span class="pl-k">return</span> <span class="pl-v">this</span>.draw(<span class="pl-v">this</span>.animation.<span class="pl-sc">frame</span><span class="pl-k">*</span><span class="pl-v">this</span>.animation.delta())}};</td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code js-file-line"><span class="pl-k">return</span> a}(Epoch.Chart.Canvas);<span class="pl-s3">Epoch.Time</span>.<span class="pl-en">Stack</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-st">function</span> <span class="pl-en">a</span>(){<span class="pl-k">return</span> a.__super__.<span class="pl-sc">constructor</span>.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>,arguments)}g(a,c);<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_prepareLayers</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b,c,k,f;k<span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(f<span class="pl-k">=</span>a.<span class="pl-sc">length</span>;k<span class="pl-k">&lt;</span>f;k<span class="pl-k">++</span>)b<span class="pl-k">=</span>a[k],b.y0<span class="pl-k">=</span>c,c<span class="pl-k">+=</span>b.<span class="pl-sc">y</span>;<span class="pl-k">return</span> a};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setData</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-s">var</span> b,h,k,f,e;a.__super__.setData.<span class="pl-s3">call</span>(<span class="pl-v">this</span>,c);e<span class="pl-k">=</span>[];b<span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>[<span class="pl-c1">0</span>].values.<span class="pl-sc">length</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>f<span class="pl-k">?</span>c<span class="pl-k">&lt;</span>f<span class="pl-k">:</span>c<span class="pl-k">&gt;</span>f;b<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>f<span class="pl-k">?++</span>c<span class="pl-k">:--</span>c)k<span class="pl-k">=</span><span class="pl-c1">0</span>,e.<span class="pl-s3">push</span>(<span class="pl-st">function</span>(){<span class="pl-s">var</span> a,c,d,f;d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>;f<span class="pl-k">=</span>[];a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span>d.<span class="pl-sc">length</span>;a<span class="pl-k">&lt;</span>c;a<span class="pl-k">++</span>)h<span class="pl-k">=</span>d[a],h.values[b].y0<span class="pl-k">=</span>k,f.<span class="pl-s3">push</span>(k<span class="pl-k">+=</span></td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code js-file-line">h.values[b].<span class="pl-sc">y</span>);<span class="pl-k">return</span> f}.<span class="pl-s3">call</span>(<span class="pl-v">this</span>));<span class="pl-k">return</span> e};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">extent</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,b,c,k,f,e,g,m;a<span class="pl-k">=</span>f<span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>[<span class="pl-c1">0</span>].values.<span class="pl-sc">length</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>g<span class="pl-k">?</span>f<span class="pl-k">&lt;</span>g<span class="pl-k">:</span>f<span class="pl-k">&gt;</span>g;a<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>g<span class="pl-k">?++</span>f<span class="pl-k">:--</span>f){b<span class="pl-k">=</span>e<span class="pl-k">=</span>k<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>.<span class="pl-sc">length</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>m<span class="pl-k">?</span>e<span class="pl-k">&lt;</span>m<span class="pl-k">:</span>e<span class="pl-k">&gt;</span>m;b<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>m<span class="pl-k">?++</span>e<span class="pl-k">:--</span>e)k<span class="pl-k">+=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>[b].values[a].<span class="pl-sc">y</span>;k<span class="pl-k">&gt;</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>k)}<span class="pl-k">return</span>[<span class="pl-c1">0</span>,c]};<span class="pl-k">return</span> a}(Epoch.Time.Plot)}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s">var</span> e<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>){<span class="pl-st">function</span> <span class="pl-en">d</span>(){<span class="pl-v">this</span>.<span class="pl-sc">constructor</span><span class="pl-k">=</span>c}<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> a)e.<span class="pl-s3">call</span>(a,b)<span class="pl-k">&amp;&amp;</span>(c[b]<span class="pl-k">=</span>a[b]);<span class="pl-s3">d</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-s3">c</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">d</span>;c.__super__<span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-k">return</span> c};<span class="pl-s3">Epoch.Time</span>.<span class="pl-en">Area</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-st">function</span> <span class="pl-en">a</span>(){<span class="pl-k">return</span> a.__super__.<span class="pl-sc">constructor</span>.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>,arguments)}g(a,c);<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setStyles</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>a.<span class="pl-sc">className</span><span class="pl-k">?</span><span class="pl-v">this</span>.getStyles(<span class="pl-s1"><span class="pl-pds">&quot;</span>g.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a.<span class="pl-sc">className</span>.<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span> path.area<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-v">this</span>.getStyles(<span class="pl-s1"><span class="pl-pds">&quot;</span>g path.area<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.ctx.fillStyle<span class="pl-k">=</span>a.fill;<span class="pl-c1">null</span><span class="pl-k">!=</span>a.stroke<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.ctx.strokeStyle<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code js-file-line">a.stroke);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span>a[<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>])<span class="pl-k">return</span> <span class="pl-v">this</span>.ctx.lineWidth<span class="pl-k">=</span>a[<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>].<span class="pl-s3">replace</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_drawAreas</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b,c,k,f,e,g,m,l,n,p;<span class="pl-c1">null</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>);g<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-sc">y</span>(),<span class="pl-v">this</span>.w()];m<span class="pl-k">=</span>g[<span class="pl-c1">0</span>];g<span class="pl-k">=</span>g[<span class="pl-c1">1</span>];p<span class="pl-k">=</span>[];<span class="pl-k">for</span>(c<span class="pl-k">=</span>l<span class="pl-k">=</span>n<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">0</span><span class="pl-k">&gt;=</span>n<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">&gt;=</span>l<span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>l;c<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;=</span>n<span class="pl-k">?++</span>l<span class="pl-k">:--</span>l){f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>[c];<span class="pl-v">this</span>.setStyles(f);<span class="pl-v">this</span>.ctx.beginPath();e<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-sc">options</span>.windowSize,f.values.<span class="pl-sc">length</span>,<span class="pl-v">this</span>.inTransition()];c<span class="pl-k">=</span>e[<span class="pl-c1">0</span>];k<span class="pl-k">=</span>e[<span class="pl-c1">1</span>];<span class="pl-k">for</span>(e<span class="pl-k">=</span>e[<span class="pl-c1">2</span>];<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">&lt;=--</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=--</span>k;)b<span class="pl-k">=</span>f.values[k],b<span class="pl-k">=</span>[(c<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>g<span class="pl-k">+</span>a,m(b.<span class="pl-sc">y</span><span class="pl-k">+</span>b.y0)],e<span class="pl-k">&amp;&amp;</span>(b[<span class="pl-c1">0</span>]<span class="pl-k">+=</span>g),c<span class="pl-k">===</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.windowSize<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code js-file-line"><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-v">this</span>.ctx.moveTo.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>.ctx,b)<span class="pl-k">:</span><span class="pl-v">this</span>.ctx.lineTo.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>.ctx,b);c<span class="pl-k">=</span>e<span class="pl-k">?</span>(c<span class="pl-k">+</span><span class="pl-c1">3</span>)<span class="pl-k">*</span>g<span class="pl-k">+</span>a<span class="pl-k">:</span>(c<span class="pl-k">+</span><span class="pl-c1">2</span>)<span class="pl-k">*</span>g<span class="pl-k">+</span>a;<span class="pl-v">this</span>.ctx.lineTo(c,<span class="pl-v">this</span>.<span class="pl-sc">innerHeight</span>());<span class="pl-v">this</span>.ctx.lineTo(<span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">*</span><span class="pl-v">this</span>.pixelRatio<span class="pl-k">+</span>g<span class="pl-k">+</span>a,<span class="pl-v">this</span>.<span class="pl-sc">innerHeight</span>());<span class="pl-v">this</span>.ctx.closePath();p.<span class="pl-s3">push</span>(<span class="pl-v">this</span>.ctx.fill())}<span class="pl-k">return</span> p};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_drawStrokes</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b,c,k,f,e,g,m,l,n,p;<span class="pl-c1">null</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>);c<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-sc">y</span>(),<span class="pl-v">this</span>.w()];m<span class="pl-k">=</span>c[<span class="pl-c1">0</span>];g<span class="pl-k">=</span>c[<span class="pl-c1">1</span>];p<span class="pl-k">=</span>[];<span class="pl-k">for</span>(c<span class="pl-k">=</span>l<span class="pl-k">=</span>n<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">0</span><span class="pl-k">&gt;=</span>n<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">&gt;=</span>l<span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>l;c<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;=</span>n<span class="pl-k">?++</span>l<span class="pl-k">:--</span>l){f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>[c];<span class="pl-v">this</span>.setStyles(f);<span class="pl-v">this</span>.ctx.beginPath();e<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-sc">options</span>.windowSize,</td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code js-file-line">f.values.<span class="pl-sc">length</span>,<span class="pl-v">this</span>.inTransition()];c<span class="pl-k">=</span>e[<span class="pl-c1">0</span>];k<span class="pl-k">=</span>e[<span class="pl-c1">1</span>];<span class="pl-k">for</span>(e<span class="pl-k">=</span>e[<span class="pl-c1">2</span>];<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">&lt;=--</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=--</span>k;)b<span class="pl-k">=</span>f.values[k],b<span class="pl-k">=</span>[(c<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>g<span class="pl-k">+</span>a,m(b.<span class="pl-sc">y</span><span class="pl-k">+</span>b.y0)],e<span class="pl-k">&amp;&amp;</span>(b[<span class="pl-c1">0</span>]<span class="pl-k">+=</span>g),c<span class="pl-k">===</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.windowSize<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-v">this</span>.ctx.moveTo.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>.ctx,b)<span class="pl-k">:</span><span class="pl-v">this</span>.ctx.lineTo.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>.ctx,b);p.<span class="pl-s3">push</span>(<span class="pl-v">this</span>.ctx.stroke())}<span class="pl-k">return</span> p};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-c1">null</span><span class="pl-k">==</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-s3">clear</span>();<span class="pl-v">this</span>._drawAreas(c);<span class="pl-v">this</span>._drawStrokes(c);<span class="pl-k">return</span> a.__super__.draw.<span class="pl-s3">call</span>(<span class="pl-v">this</span>)};<span class="pl-k">return</span> a}(Epoch.Time.Stack)}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s">var</span> e<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>){<span class="pl-st">function</span> <span class="pl-en">d</span>(){<span class="pl-v">this</span>.<span class="pl-sc">constructor</span><span class="pl-k">=</span>c}<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> a)e.<span class="pl-s3">call</span>(a,b)<span class="pl-k">&amp;&amp;</span>(c[b]<span class="pl-k">=</span>a[b]);<span class="pl-s3">d</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-s3">c</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">d</span>;c.__super__<span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-k">return</span> c};<span class="pl-s3">Epoch.Time</span>.<span class="pl-en">Bar</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-st">function</span> <span class="pl-en">a</span>(){<span class="pl-k">return</span> a.__super__.<span class="pl-sc">constructor</span>.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>,arguments)}g(a,c);<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_offsetX</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">0.5</span><span class="pl-k">*</span><span class="pl-v">this</span>.w()/<span class="pl-v">this</span>.pixelRatio};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setStyles</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a<span class="pl-k">=</span><span class="pl-v">this</span>.getStyles(<span class="pl-s1"><span class="pl-pds">&quot;</span>rect.bar.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a.<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>));<span class="pl-v">this</span>.ctx.fillStyle<span class="pl-k">=</span>a.fill;<span class="pl-v">this</span>.ctx.strokeStyle<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code js-file-line"><span class="pl-c1">null</span><span class="pl-k">==</span>a.stroke<span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>a.stroke<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>transparent<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>a.stroke;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span>a[<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>])<span class="pl-k">return</span> <span class="pl-v">this</span>.ctx.lineWidth<span class="pl-k">=</span>a[<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>].<span class="pl-s3">replace</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-s">var</span> b,h,k,f,e,g,m,l,n,p,r,s,t;<span class="pl-c1">null</span><span class="pl-k">==</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-s3">clear</span>();f<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-sc">y</span>(),<span class="pl-v">this</span>.w()];p<span class="pl-k">=</span>f[<span class="pl-c1">0</span>];n<span class="pl-k">=</span>f[<span class="pl-c1">1</span>];t<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>;r<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(s<span class="pl-k">=</span>t.<span class="pl-sc">length</span>;r<span class="pl-k">&lt;</span>s;r<span class="pl-k">++</span>)<span class="pl-k">if</span>(m<span class="pl-k">=</span>t[r],<span class="pl-c1">0</span><span class="pl-k">&lt;</span>m.values.<span class="pl-sc">length</span>)<span class="pl-k">for</span>(<span class="pl-v">this</span>.setStyles(m.<span class="pl-sc">className</span>),e<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-sc">options</span>.windowSize,m.values.<span class="pl-sc">length</span>,<span class="pl-v">this</span>.inTransition()],f<span class="pl-k">=</span>e[<span class="pl-c1">0</span>],g<span class="pl-k">=</span>e[<span class="pl-c1">1</span>],e<span class="pl-k">=</span>(l<span class="pl-k">=</span>e[<span class="pl-c1">2</span>])<span class="pl-k">?-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-k">--</span>f<span class="pl-k">&gt;=</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=--</span>g;)b<span class="pl-k">=</span>m.values[g],k<span class="pl-k">=</span>[f<span class="pl-k">*</span>n<span class="pl-k">+</span>c,</td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code js-file-line">b.<span class="pl-sc">y</span>,b.y0],b<span class="pl-k">=</span>k[<span class="pl-c1">0</span>],h<span class="pl-k">=</span>k[<span class="pl-c1">1</span>],k<span class="pl-k">=</span>k[<span class="pl-c1">2</span>],l<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">+=</span>n),b<span class="pl-k">=</span>[b<span class="pl-k">+</span><span class="pl-c1">1</span>,p(h<span class="pl-k">+</span>k),n<span class="pl-k">-</span><span class="pl-c1">2</span>,<span class="pl-v">this</span>.<span class="pl-sc">innerHeight</span>()<span class="pl-k">-</span>p(h)<span class="pl-k">+</span><span class="pl-c1">0.5</span><span class="pl-k">*</span><span class="pl-v">this</span>.pixelRatio],<span class="pl-v">this</span>.ctx.fillRect.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>.ctx,b),<span class="pl-v">this</span>.ctx.strokeRect.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>.ctx,b);<span class="pl-k">return</span> a.__super__.draw.<span class="pl-s3">call</span>(<span class="pl-v">this</span>)};<span class="pl-k">return</span> a}(Epoch.Time.Stack)}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s">var</span> e<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>){<span class="pl-st">function</span> <span class="pl-en">d</span>(){<span class="pl-v">this</span>.<span class="pl-sc">constructor</span><span class="pl-k">=</span>c}<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> a)e.<span class="pl-s3">call</span>(a,b)<span class="pl-k">&amp;&amp;</span>(c[b]<span class="pl-k">=</span>a[b]);<span class="pl-s3">d</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-s3">c</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">d</span>;c.__super__<span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-k">return</span> c};<span class="pl-s3">Epoch.Time</span>.<span class="pl-en">Gauge</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-st">function</span> <span class="pl-en">a</span>(<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>c<span class="pl-k">?</span>c<span class="pl-k">:</span>{};a.__super__.<span class="pl-sc">constructor</span>.<span class="pl-s3">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span>Epoch.Util.defaults(<span class="pl-v">this</span>.<span class="pl-sc">options</span>,d));<span class="pl-v">this</span>.<span class="pl-sc">value</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.<span class="pl-sc">value</span><span class="pl-k">||</span><span class="pl-c1">0</span>;<span class="pl-s1"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-v">this</span>.el.<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-s1"><span class="pl-pds">&quot;</span>relative<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-v">this</span>.el.<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.el.<span class="pl-sc">style</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>relative<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code js-file-line"><span class="pl-v">this</span>.svg<span class="pl-k">=</span><span class="pl-v">this</span>.el.insert(<span class="pl-s1"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>:first-child<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-sc">width</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-sc">height</span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>gauge-labels<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.svg.<span class="pl-sc">style</span>({position<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>z-index<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span>});<span class="pl-v">this</span>.svg.append(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.textX()<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.textY()<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>).append(<span class="pl-s1"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">text</span>(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.format(<span class="pl-v">this</span>.<span class="pl-sc">value</span>));<span class="pl-v">this</span>.animation<span class="pl-k">=</span>{interval<span class="pl-k">:</span><span class="pl-c1">null</span>,active<span class="pl-k">:!</span><span class="pl-c1">1</span>,delta<span class="pl-k">:</span><span class="pl-c1">0</span>,target<span class="pl-k">:</span><span class="pl-c1">0</span>};<span class="pl-s3">this</span>.<span class="pl-en">_animate</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-st">function</span>(){<span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(a.animation.<span class="pl-sc">target</span><span class="pl-k">-</span>a.<span class="pl-sc">value</span>)<span class="pl-k">&lt;</span><span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(a.animation.delta)<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code js-file-line">(a.<span class="pl-sc">value</span><span class="pl-k">=</span>a.animation.<span class="pl-sc">target</span>,<span class="pl-s3">clearInterval</span>(a.animation.interval),a.animation.active<span class="pl-k">=!</span><span class="pl-c1">1</span>)<span class="pl-k">:</span>a.<span class="pl-sc">value</span><span class="pl-k">+=</span>a.animation.delta;a.svg.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>text.value<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">text</span>(a.<span class="pl-sc">options</span>.format(a.<span class="pl-sc">value</span>));<span class="pl-k">return</span> a.draw()}}(<span class="pl-v">this</span>);<span class="pl-v">this</span>.onAll(b)}<span class="pl-s">var</span> d,b;g(a,c);d<span class="pl-k">=</span>{domain<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>],ticks<span class="pl-k">:</span><span class="pl-c1">10</span>,tickSize<span class="pl-k">:</span><span class="pl-c1">5</span>,tickOffset<span class="pl-k">:</span><span class="pl-c1">5</span>,fps<span class="pl-k">:</span><span class="pl-c1">34</span>,format<span class="pl-k">:</span>Epoch.Formats.percent};b<span class="pl-k">=</span>{<span class="pl-s1"><span class="pl-pds">&quot;</span>option:domain<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>domainChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:ticks<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>ticksChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:tickSize<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>tickSizeChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:tickOffset<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>tickOffsetChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:format<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>formatChanged<span class="pl-pds">&quot;</span></span>};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">update</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code js-file-line"><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.animation.<span class="pl-sc">target</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.animation.delta<span class="pl-k">=</span>(a<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-sc">value</span>)/<span class="pl-v">this</span>.<span class="pl-sc">options</span>.fps;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.animation.active)<span class="pl-k">return</span> <span class="pl-v">this</span>.animation.interval<span class="pl-k">=</span><span class="pl-s3">setInterval</span>(<span class="pl-v">this</span>._animate,<span class="pl-c1">1E3</span>/<span class="pl-v">this</span>.<span class="pl-sc">options</span>.fps),<span class="pl-v">this</span>.animation.active<span class="pl-k">=!</span><span class="pl-c1">0</span>};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">push</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.update(a)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">radius</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.getHeight()/<span class="pl-c1">1.58</span>};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">centerX</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.getWidth()/<span class="pl-c1">2</span>};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">centerY</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">0.68</span><span class="pl-k">*</span><span class="pl-v">this</span>.getHeight()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">textX</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">width</span>/<span class="pl-c1">2</span>};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">textY</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code js-file-line"><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">0.48</span><span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-sc">height</span>};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getAngle</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b,c;c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.<span class="pl-sc">domain</span>;b<span class="pl-k">=</span>c[<span class="pl-c1">0</span>];<span class="pl-k">return</span>(a<span class="pl-k">-</span>b)/(c[<span class="pl-c1">1</span>]<span class="pl-k">-</span>b)<span class="pl-k">*</span>(<span class="pl-s3">Math</span>.<span class="pl-sc">PI</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-s3">Math</span>.<span class="pl-sc">PI</span>/<span class="pl-c1">8</span>)<span class="pl-k">-</span><span class="pl-s3">Math</span>.<span class="pl-sc">PI</span>/<span class="pl-c1">2</span><span class="pl-k">-</span><span class="pl-s3">Math</span>.<span class="pl-sc">PI</span>/<span class="pl-c1">8</span>};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setStyles</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a<span class="pl-k">=</span><span class="pl-v">this</span>.getStyles(a);<span class="pl-v">this</span>.ctx.fillStyle<span class="pl-k">=</span>a.fill;<span class="pl-v">this</span>.ctx.strokeStyle<span class="pl-k">=</span>a.stroke;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span>a[<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>])<span class="pl-k">return</span> <span class="pl-v">this</span>.ctx.lineWidth<span class="pl-k">=</span>a[<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>].<span class="pl-s3">replace</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> b,c,d,e,g,m,l,n,p,r,s,t;g<span class="pl-k">=</span>[<span class="pl-v">this</span>.centerX(),<span class="pl-v">this</span>.centerY(),<span class="pl-v">this</span>.radius()];d<span class="pl-k">=</span>g[<span class="pl-c1">0</span>];e<span class="pl-k">=</span>g[<span class="pl-c1">1</span>];g<span class="pl-k">=</span>g[<span class="pl-c1">2</span>];l<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-sc">options</span>.tickOffset,</td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code js-file-line"><span class="pl-v">this</span>.<span class="pl-sc">options</span>.tickSize];n<span class="pl-k">=</span>l[<span class="pl-c1">0</span>];p<span class="pl-k">=</span>l[<span class="pl-c1">1</span>];<span class="pl-v">this</span>.<span class="pl-s3">clear</span>();l<span class="pl-k">=</span>d3.scale.linear().<span class="pl-sc">domain</span>([<span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-sc">options</span>.ticks]).range([<span class="pl-k">-</span><span class="pl-c1">1.125</span><span class="pl-k">*</span><span class="pl-s3">Math</span>.<span class="pl-sc">PI</span>,<span class="pl-s3">Math</span>.<span class="pl-sc">PI</span>/<span class="pl-c1">8</span>]);<span class="pl-v">this</span>.setStyles(<span class="pl-s1"><span class="pl-pds">&quot;</span>.epoch .gauge .tick<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.ctx.beginPath();b<span class="pl-k">=</span>s<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(t<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.ticks;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>t<span class="pl-k">?</span>s<span class="pl-k">&lt;=</span>t<span class="pl-k">:</span>s<span class="pl-k">&gt;=</span>t;b<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>t<span class="pl-k">?++</span>s<span class="pl-k">:--</span>s)b<span class="pl-k">=</span>l(b),b<span class="pl-k">=</span>[<span class="pl-s3">Math</span>.<span class="pl-s3">cos</span>(b),<span class="pl-s3">Math</span>.<span class="pl-s3">sin</span>(b)],c<span class="pl-k">=</span>b[<span class="pl-c1">0</span>],m<span class="pl-k">=</span>b[<span class="pl-c1">1</span>],b<span class="pl-k">=</span>c<span class="pl-k">*</span>(g<span class="pl-k">-</span>n)<span class="pl-k">+</span>d,r<span class="pl-k">=</span>m<span class="pl-k">*</span>(g<span class="pl-k">-</span>n)<span class="pl-k">+</span>e,c<span class="pl-k">=</span>c<span class="pl-k">*</span>(g<span class="pl-k">-</span>n<span class="pl-k">-</span>p)<span class="pl-k">+</span>d,m<span class="pl-k">=</span>m<span class="pl-k">*</span>(g<span class="pl-k">-</span>n<span class="pl-k">-</span>p)<span class="pl-k">+</span>e,<span class="pl-v">this</span>.ctx.<span class="pl-s3">moveTo</span>(b,r),<span class="pl-v">this</span>.ctx.lineTo(c,m);<span class="pl-v">this</span>.ctx.stroke();<span class="pl-v">this</span>.setStyles(<span class="pl-s1"><span class="pl-pds">&quot;</span>.epoch .gauge .arc.outer<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.ctx.beginPath();<span class="pl-v">this</span>.ctx.arc(d,e,g,<span class="pl-k">-</span><span class="pl-c1">1.125</span><span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code js-file-line"><span class="pl-s3">Math</span>.<span class="pl-sc">PI</span>,<span class="pl-c1">0.125</span><span class="pl-k">*</span><span class="pl-s3">Math</span>.<span class="pl-sc">PI</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-v">this</span>.ctx.stroke();<span class="pl-v">this</span>.setStyles(<span class="pl-s1"><span class="pl-pds">&quot;</span>.epoch .gauge .arc.inner<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.ctx.beginPath();<span class="pl-v">this</span>.ctx.arc(d,e,g<span class="pl-k">-</span><span class="pl-c1">10</span>,<span class="pl-k">-</span><span class="pl-c1">1.125</span><span class="pl-k">*</span><span class="pl-s3">Math</span>.<span class="pl-sc">PI</span>,<span class="pl-c1">0.125</span><span class="pl-k">*</span><span class="pl-s3">Math</span>.<span class="pl-sc">PI</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-v">this</span>.ctx.stroke();<span class="pl-v">this</span>.drawNeedle();<span class="pl-k">return</span> a.__super__.draw.<span class="pl-s3">call</span>(<span class="pl-v">this</span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">drawNeedle</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,b,c;c<span class="pl-k">=</span>[<span class="pl-v">this</span>.centerX(),<span class="pl-v">this</span>.centerY(),<span class="pl-v">this</span>.radius()];a<span class="pl-k">=</span>c[<span class="pl-c1">0</span>];b<span class="pl-k">=</span>c[<span class="pl-c1">1</span>];c<span class="pl-k">=</span>c[<span class="pl-c1">2</span>];<span class="pl-v">this</span>.setStyles(<span class="pl-s1"><span class="pl-pds">&quot;</span>.epoch .gauge .needle<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.ctx.beginPath();<span class="pl-v">this</span>.ctx.save();<span class="pl-v">this</span>.ctx.translate(a,b);<span class="pl-v">this</span>.ctx.rotate(<span class="pl-v">this</span>.getAngle(<span class="pl-v">this</span>.<span class="pl-sc">value</span>));<span class="pl-v">this</span>.ctx.<span class="pl-s3">moveTo</span>(<span class="pl-c1">4</span><span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code js-file-line"><span class="pl-v">this</span>.pixelRatio,<span class="pl-c1">0</span>);<span class="pl-v">this</span>.ctx.lineTo(<span class="pl-k">-</span><span class="pl-c1">4</span><span class="pl-k">*</span><span class="pl-v">this</span>.pixelRatio,<span class="pl-c1">0</span>);<span class="pl-v">this</span>.ctx.lineTo(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">*</span><span class="pl-v">this</span>.pixelRatio,<span class="pl-c1">19</span><span class="pl-k">-</span>c);<span class="pl-v">this</span>.ctx.lineTo(<span class="pl-c1">1</span>,<span class="pl-c1">19</span><span class="pl-k">-</span>c);<span class="pl-v">this</span>.ctx.fill();<span class="pl-v">this</span>.setStyles(<span class="pl-s1"><span class="pl-pds">&quot;</span>.epoch .gauge .needle-base<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.ctx.beginPath();<span class="pl-v">this</span>.ctx.arc(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-v">this</span>.getWidth()/<span class="pl-c1">25</span>,<span class="pl-c1">0</span>,<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-s3">Math</span>.<span class="pl-sc">PI</span>);<span class="pl-v">this</span>.ctx.fill();<span class="pl-k">return</span> <span class="pl-v">this</span>.ctx.restore()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">domainChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.draw()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">ticksChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.draw()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">tickSizeChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.draw()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">tickOffsetChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.draw()};</td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code js-file-line"><span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">formatChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.svg.<span class="pl-s3">select</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>text.value<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">text</span>(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.format(<span class="pl-v">this</span>.<span class="pl-sc">value</span>))};<span class="pl-k">return</span> a}(Epoch.Chart.Canvas)}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s">var</span> e<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>){<span class="pl-st">function</span> <span class="pl-en">d</span>(){<span class="pl-v">this</span>.<span class="pl-sc">constructor</span><span class="pl-k">=</span>c}<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> a)e.<span class="pl-s3">call</span>(a,b)<span class="pl-k">&amp;&amp;</span>(c[b]<span class="pl-k">=</span>a[b]);<span class="pl-s3">d</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-s3">c</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">d</span>;c.__super__<span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-k">return</span> c};<span class="pl-s3">Epoch.Time</span>.<span class="pl-en">Heatmap</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-st">function</span> <span class="pl-en">a</span>(<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span>c;a.__super__.<span class="pl-sc">constructor</span>.<span class="pl-s3">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span>Epoch.Util.defaults(<span class="pl-v">this</span>.<span class="pl-sc">options</span>,b));<span class="pl-v">this</span>._setOpacityFunction();<span class="pl-v">this</span>._setupPaintCanvas();<span class="pl-v">this</span>.onAll(e)}<span class="pl-s">var</span> d,b,e;g(a,c);b<span class="pl-k">=</span>{buckets<span class="pl-k">:</span><span class="pl-c1">10</span>,bucketRange<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">100</span>],opacity<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>,bucketPadding<span class="pl-k">:</span><span class="pl-c1">2</span>,paintZeroValues<span class="pl-k">:!</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code js-file-line">cutOutliers<span class="pl-k">:!</span><span class="pl-c1">1</span>};d<span class="pl-k">=</span>{<span class="pl-en">root</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(a/b,<span class="pl-c1">0.5</span>)},<span class="pl-en">linear</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">return</span> a/b},<span class="pl-en">quadratic</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(a/b,<span class="pl-c1">2</span>)},<span class="pl-en">cubic</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(a/b,<span class="pl-c1">3</span>)},<span class="pl-en">quartic</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(a/b,<span class="pl-c1">4</span>)},<span class="pl-en">quintic</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(a/b,<span class="pl-c1">5</span>)}};e<span class="pl-k">=</span>{<span class="pl-s1"><span class="pl-pds">&quot;</span>option:buckets<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>bucketsChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:bucketRange<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>bucketRangeChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:opacity<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>opacityChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:bucketPadding<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>bucketPaddingChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:paintZeroValues<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>paintZeroValuesChanged<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>option:cutOutliers<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>cutOutliersChanged<span class="pl-pds">&quot;</span></span>};</td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code js-file-line"><span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_setOpacityFunction</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(Epoch.isString(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.opacity)){<span class="pl-k">if</span>(<span class="pl-v">this</span>._opacityFn<span class="pl-k">=</span>d[<span class="pl-v">this</span>.<span class="pl-sc">options</span>.opacity],<span class="pl-c1">null</span><span class="pl-k">==</span><span class="pl-v">this</span>._opacityFn)<span class="pl-k">return</span> Epoch.exception(<span class="pl-s1"><span class="pl-pds">&quot;</span>Unknown coloring function provided &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.opacity<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">else</span> <span class="pl-k">return</span> Epoch.isFunction(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.opacity)<span class="pl-k">?</span><span class="pl-v">this</span>._opacityFn<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.opacity<span class="pl-k">:</span>Epoch.exception(<span class="pl-s1"><span class="pl-pds">&quot;</span>Unknown type for provided coloring function.<span class="pl-pds">&quot;</span></span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setData</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c,d,e,g;a.__super__.setData.<span class="pl-s3">call</span>(<span class="pl-v">this</span>,b);e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>;g<span class="pl-k">=</span>[];c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span>e.<span class="pl-sc">length</span>;c<span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code js-file-line">d;c<span class="pl-k">++</span>)b<span class="pl-k">=</span>e[c],g.<span class="pl-s3">push</span>(b.values<span class="pl-k">=</span>b.values.map(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">return</span> a._prepareEntry(b)}}(<span class="pl-v">this</span>)));<span class="pl-k">return</span> g};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_getBuckets</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b,c,d,e,g;e<span class="pl-k">=</span>a<span class="pl-s3">.time</span>;g<span class="pl-k">=</span>[];b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.buckets;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>d<span class="pl-k">?</span>b<span class="pl-k">&lt;</span>d<span class="pl-k">:</span>b<span class="pl-k">&gt;</span>d;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>d<span class="pl-k">?++</span>b<span class="pl-k">:--</span>b)g.<span class="pl-s3">push</span>(<span class="pl-c1">0</span>);e<span class="pl-k">=</span>{time<span class="pl-k">:</span>e,max<span class="pl-k">:</span><span class="pl-c1">0</span>,buckets<span class="pl-k">:</span>g};b<span class="pl-k">=</span>(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.bucketRange[<span class="pl-c1">1</span>]<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.bucketRange[<span class="pl-c1">0</span>])/<span class="pl-v">this</span>.<span class="pl-sc">options</span>.buckets;g<span class="pl-k">=</span>a.histogram;<span class="pl-k">for</span>(c <span class="pl-k">in</span> g)a<span class="pl-k">=</span>g[c],d<span class="pl-k">=</span><span class="pl-s3">parseInt</span>((c<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.bucketRange[<span class="pl-c1">0</span>])/b),<span class="pl-v">this</span>.<span class="pl-sc">options</span>.cutOutliers<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>d<span class="pl-k">||</span>d<span class="pl-k">&gt;=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.buckets)<span class="pl-k">||</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>d<span class="pl-k">?</span>d<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code js-file-line"><span class="pl-c1">0</span><span class="pl-k">:</span>d<span class="pl-k">&gt;=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.buckets<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.buckets<span class="pl-k">-</span><span class="pl-c1">1</span>),e.buckets[d]<span class="pl-k">+=</span><span class="pl-s3">parseInt</span>(a));c<span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span>e.buckets.<span class="pl-sc">length</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>b<span class="pl-k">?</span>a<span class="pl-k">&lt;</span>b<span class="pl-k">:</span>a<span class="pl-k">&gt;</span>b;c<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>b<span class="pl-k">?++</span>a<span class="pl-k">:--</span>a)e.max<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(e.max,e.buckets[c]);<span class="pl-k">return</span> e};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">y</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> d3.scale.linear().<span class="pl-sc">domain</span>(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.bucketRange).range([<span class="pl-v">this</span>.<span class="pl-sc">innerHeight</span>(),<span class="pl-c1">0</span>])};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">ySvg</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> d3.scale.linear().<span class="pl-sc">domain</span>(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.bucketRange).range([<span class="pl-v">this</span>.<span class="pl-sc">innerHeight</span>()/<span class="pl-v">this</span>.pixelRatio,<span class="pl-c1">0</span>])};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">innerHeight</span>()/<span class="pl-v">this</span>.<span class="pl-sc">options</span>.buckets};</td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code js-file-line"><span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_offsetX</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">0.5</span><span class="pl-k">*</span><span class="pl-v">this</span>.w()/<span class="pl-v">this</span>.pixelRatio};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_setupPaintCanvas</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-v">this</span>.paintWidth<span class="pl-k">=</span>(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.windowSize<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-v">this</span>.w();<span class="pl-v">this</span>.paintHeight<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">*</span><span class="pl-v">this</span>.pixelRatio;<span class="pl-v">this</span>.paint<span class="pl-k">=</span><span class="pl-s3">document</span>.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>CANVAS<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.paint.<span class="pl-sc">width</span><span class="pl-k">=</span><span class="pl-v">this</span>.paintWidth;<span class="pl-v">this</span>.paint.<span class="pl-sc">height</span><span class="pl-k">=</span><span class="pl-v">this</span>.paintHeight;<span class="pl-v">this</span>.p<span class="pl-k">=</span>Epoch.Util.getContext(<span class="pl-v">this</span>.paint);<span class="pl-v">this</span>.redraw();<span class="pl-v">this</span>.on(<span class="pl-s1"><span class="pl-pds">&quot;</span>after:shift<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>_paintEntry<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.on(<span class="pl-s1"><span class="pl-pds">&quot;</span>transition:end<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>_shiftPaintCanvas<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.on(<span class="pl-s1"><span class="pl-pds">&quot;</span>transition:end<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-st">function</span>(){<span class="pl-k">return</span> a.draw(a.animation.<span class="pl-sc">frame</span><span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code js-file-line">a.animation.delta())}}(<span class="pl-v">this</span>))};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">redraw</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,b;b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>[<span class="pl-c1">0</span>].values.<span class="pl-sc">length</span>;a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.windowSize;<span class="pl-k">for</span>(<span class="pl-v">this</span>.inTransition()<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">++</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=--</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=--</span>a;)<span class="pl-v">this</span>._paintEntry(b,a);<span class="pl-k">return</span> <span class="pl-v">this</span>.draw(<span class="pl-v">this</span>.animation.<span class="pl-sc">frame</span><span class="pl-k">*</span><span class="pl-v">this</span>.animation.delta())};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_computeColor</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-k">return</span> Epoch.Util.toRGBA(c,<span class="pl-v">this</span>._opacityFn(a,b))};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_paintEntry</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c,d,e,g,h,p,r,s,t,v,y,w,A,z;<span class="pl-c1">null</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">null</span>);<span class="pl-c1">null</span><span class="pl-k">==</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">null</span>);g<span class="pl-k">=</span>[<span class="pl-v">this</span>.w(),<span class="pl-v">this</span>.h()];y<span class="pl-k">=</span>g[<span class="pl-c1">0</span>];p<span class="pl-k">=</span>g[<span class="pl-c1">1</span>];<span class="pl-c1">null</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>[<span class="pl-c1">0</span>].values.<span class="pl-sc">length</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code js-file-line"><span class="pl-c1">1</span>);<span class="pl-c1">null</span><span class="pl-k">==</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.windowSize);g<span class="pl-k">=</span>[];<span class="pl-s">var</span> x;x<span class="pl-k">=</span>[];h<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(v<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.buckets;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>v<span class="pl-k">?</span>h<span class="pl-k">&lt;</span>v<span class="pl-k">:</span>h<span class="pl-k">&gt;</span>v;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>v<span class="pl-k">?++</span>h<span class="pl-k">:--</span>h)x.<span class="pl-s3">push</span>(<span class="pl-c1">0</span>);v<span class="pl-k">=</span><span class="pl-c1">0</span>;t<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>;d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(r<span class="pl-k">=</span>t.<span class="pl-sc">length</span>;d<span class="pl-k">&lt;</span>r;d<span class="pl-k">++</span>){s<span class="pl-k">=</span>t[d];h<span class="pl-k">=</span><span class="pl-v">this</span>._getBuckets(s.values[a]);w<span class="pl-k">=</span>h.buckets;<span class="pl-k">for</span>(c <span class="pl-k">in</span> w)e<span class="pl-k">=</span>w[c],x[c]<span class="pl-k">+=</span>e;v<span class="pl-k">+=</span>h.max;e<span class="pl-k">=</span><span class="pl-v">this</span>.getStyles(<span class="pl-s1"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>s.<span class="pl-sc">className</span>.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>).<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span> rect.bucket<span class="pl-pds">&quot;</span></span>);h.<span class="pl-sc">color</span><span class="pl-k">=</span>e.fill;g.<span class="pl-s3">push</span>(h)}s<span class="pl-k">=</span>b<span class="pl-k">*</span>y;<span class="pl-v">this</span>.p.clearRect(s,<span class="pl-c1">0</span>,y,<span class="pl-v">this</span>.paintHeight);r<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.buckets;z<span class="pl-k">=</span>[];<span class="pl-k">for</span>(c <span class="pl-k">in</span> x){e<span class="pl-k">=</span>x[c];d<span class="pl-k">=</span><span class="pl-v">this</span>._avgLab(g,c);w<span class="pl-k">=</span>t<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(A<span class="pl-k">=</span>g.<span class="pl-sc">length</span>;w<span class="pl-k">&lt;</span>A;w<span class="pl-k">++</span>)h<span class="pl-k">=</span>g[w],t<span class="pl-k">+=</span></td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code js-file-line">h.buckets[c]/e<span class="pl-k">*</span>v;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>e<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.paintZeroValues)<span class="pl-v">this</span>.p.fillStyle<span class="pl-k">=</span><span class="pl-v">this</span>._computeColor(e,t,d),<span class="pl-v">this</span>.p.fillRect(s,(r<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>p,y<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.bucketPadding,p<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.bucketPadding);z.<span class="pl-s3">push</span>(r<span class="pl-k">--</span>)}<span class="pl-k">return</span> z};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_shiftPaintCanvas</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a;a<span class="pl-k">=</span><span class="pl-v">this</span>.p.getImageData(<span class="pl-v">this</span>.w(),<span class="pl-c1">0</span>,<span class="pl-v">this</span>.paintWidth<span class="pl-k">-</span><span class="pl-v">this</span>.w(),<span class="pl-v">this</span>.paintHeight);<span class="pl-k">return</span> <span class="pl-v">this</span>.p.putImageData(a,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">_avgLab</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c,d,e,g,h,p,r,s;r<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];h<span class="pl-k">=</span>r[<span class="pl-c1">0</span>];c<span class="pl-k">=</span>r[<span class="pl-c1">1</span>];d<span class="pl-k">=</span>r[<span class="pl-c1">2</span>];r<span class="pl-k">=</span>r[<span class="pl-c1">3</span>];p<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(s<span class="pl-k">=</span>a.<span class="pl-sc">length</span>;p<span class="pl-k">&lt;</span>s;p<span class="pl-k">++</span>)e<span class="pl-k">=</span>a[p],<span class="pl-c1">null</span><span class="pl-k">!=</span>e.buckets[b]<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code js-file-line">(r<span class="pl-k">+=</span>e.buckets[b]);<span class="pl-k">for</span>(g <span class="pl-k">in</span> a)e<span class="pl-k">=</span>a[g],p<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span>e.buckets[b]<span class="pl-k">?</span>e.buckets[b]|<span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">0</span>,p<span class="pl-k">/=</span>r,e<span class="pl-k">=</span>d3.lab(e.<span class="pl-sc">color</span>),h<span class="pl-k">+=</span>p<span class="pl-k">*</span>e.l,c<span class="pl-k">+=</span>p<span class="pl-k">*</span>e.a,d<span class="pl-k">+=</span>p<span class="pl-k">*</span>e.b;<span class="pl-k">return</span> d3.lab(h,c,d).<span class="pl-s3">toString</span>()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-c1">null</span><span class="pl-k">==</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-s3">clear</span>();<span class="pl-v">this</span>.ctx.drawImage(<span class="pl-v">this</span>.paint,b,<span class="pl-c1">0</span>);<span class="pl-k">return</span> a.__super__.draw.<span class="pl-s3">call</span>(<span class="pl-v">this</span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">bucketsChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.redraw()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">bucketRangeChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-v">this</span>._transitionRangeAxes();<span class="pl-k">return</span> <span class="pl-v">this</span>.redraw()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">opacityChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-v">this</span>._setOpacityFunction();</td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code js-file-line"><span class="pl-k">return</span> <span class="pl-v">this</span>.redraw()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">bucketPaddingChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.redraw()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">paintZeroValuesChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.redraw()};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">cutOutliersChanged</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.redraw()};<span class="pl-k">return</span> a}(Epoch.Time.Plot)}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s">var</span> e<span class="pl-k">=</span>{}.hasOwnProperty,<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>){<span class="pl-st">function</span> <span class="pl-en">d</span>(){<span class="pl-v">this</span>.<span class="pl-sc">constructor</span><span class="pl-k">=</span>c}<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> a)e.<span class="pl-s3">call</span>(a,b)<span class="pl-k">&amp;&amp;</span>(c[b]<span class="pl-k">=</span>a[b]);<span class="pl-s3">d</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-s3">c</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">d</span>;c.__super__<span class="pl-k">=</span>a.<span class="pl-sc">prototype</span>;<span class="pl-k">return</span> c};<span class="pl-s3">Epoch.Time</span>.<span class="pl-en">Line</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-st">function</span> <span class="pl-en">a</span>(){<span class="pl-k">return</span> a.__super__.<span class="pl-sc">constructor</span>.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>,arguments)}g(a,c);<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setStyles</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a<span class="pl-k">=</span><span class="pl-v">this</span>.getStyles(<span class="pl-s1"><span class="pl-pds">&quot;</span>g.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a.<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span> path.line<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.ctx.fillStyle<span class="pl-k">=</span>a.fill;<span class="pl-v">this</span>.ctx.strokeStyle<span class="pl-k">=</span>a.stroke;<span class="pl-k">return</span> <span class="pl-v">this</span>.ctx.lineWidth<span class="pl-k">=</span><span class="pl-v">this</span>.pixelRatio<span class="pl-k">*</span>a[<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>].<span class="pl-s3">replace</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">y</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> d3.scale.linear().<span class="pl-sc">domain</span>(<span class="pl-v">this</span>.extent(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">y</span>})).range([<span class="pl-v">this</span>.<span class="pl-sc">innerHeight</span>()<span class="pl-k">-</span><span class="pl-v">this</span>.pixelRatio/<span class="pl-c1">2</span>,<span class="pl-v">this</span>.pixelRatio])};<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-s">var</span> b,e,g,f,q,u,m,l,n,p;<span class="pl-c1">null</span><span class="pl-k">==</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-s3">clear</span>();e<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-sc">y</span>(),<span class="pl-v">this</span>.w()];m<span class="pl-k">=</span>e[<span class="pl-c1">0</span>];u<span class="pl-k">=</span>e[<span class="pl-c1">1</span>];p<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>;l<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(n<span class="pl-k">=</span>p.<span class="pl-sc">length</span>;l<span class="pl-k">&lt;</span>n;l<span class="pl-k">++</span>)<span class="pl-k">if</span>(f<span class="pl-k">=</span>p[l],<span class="pl-c1">0</span><span class="pl-k">&lt;</span>f.values.<span class="pl-sc">length</span>){<span class="pl-v">this</span>.setStyles(f.<span class="pl-sc">className</span>);<span class="pl-v">this</span>.ctx.beginPath();q<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-sc">options</span>.windowSize,f.values.<span class="pl-sc">length</span>,<span class="pl-v">this</span>.inTransition()];e<span class="pl-k">=</span>q[<span class="pl-c1">0</span>];g<span class="pl-k">=</span>q[<span class="pl-c1">1</span>];<span class="pl-k">for</span>(q<span class="pl-k">=</span>q[<span class="pl-c1">2</span>];<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">&lt;=--</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=--</span>g;)b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code js-file-line">f.values[g],b<span class="pl-k">=</span>[(e<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>u<span class="pl-k">+</span>c,m(b.<span class="pl-sc">y</span>)],q<span class="pl-k">&amp;&amp;</span>(b[<span class="pl-c1">0</span>]<span class="pl-k">+=</span>u),e<span class="pl-k">===</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.windowSize<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-v">this</span>.ctx.moveTo.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>.ctx,b)<span class="pl-k">:</span><span class="pl-v">this</span>.ctx.lineTo.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>.ctx,b);<span class="pl-v">this</span>.ctx.stroke()}<span class="pl-k">return</span> a.__super__.draw.<span class="pl-s3">call</span>(<span class="pl-v">this</span>)};<span class="pl-k">return</span> a}(Epoch.Time.Plot)}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);(<span class="pl-st">function</span>(){Epoch._typeMap<span class="pl-k">=</span>{area<span class="pl-k">:</span>Epoch.Chart.<span class="pl-s3">Area</span>,bar<span class="pl-k">:</span>Epoch.Chart.Bar,line<span class="pl-k">:</span>Epoch.Chart.Line,pie<span class="pl-k">:</span>Epoch.Chart.Pie,scatter<span class="pl-k">:</span>Epoch.Chart.Scatter,<span class="pl-s1"><span class="pl-pds">&quot;</span>time.area<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>Epoch.Time.<span class="pl-s3">Area</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>time.bar<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>Epoch.Time.Bar,<span class="pl-s1"><span class="pl-pds">&quot;</span>time.line<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>Epoch.Time.Line,<span class="pl-s1"><span class="pl-pds">&quot;</span>time.gauge<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>Epoch.Time.Gauge,<span class="pl-s1"><span class="pl-pds">&quot;</span>time.heatmap<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>Epoch.Time.Heatmap}}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-s3">window</span>.MooTools<span class="pl-k">&amp;&amp;</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> Element.implement(<span class="pl-s1"><span class="pl-pds">&quot;</span>epoch<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">e</span>){<span class="pl-s">var</span> g,c;c<span class="pl-k">=</span>$$(<span class="pl-v">this</span>);<span class="pl-c1">null</span><span class="pl-k">==</span>(g<span class="pl-k">=</span>c.retrieve(<span class="pl-s1"><span class="pl-pds">&quot;</span>epoch-chart<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>])<span class="pl-k">&amp;&amp;</span>(e.el<span class="pl-k">=</span><span class="pl-v">this</span>,g<span class="pl-k">=</span>Epoch._typeMap[e.<span class="pl-sc">type</span>],<span class="pl-c1">null</span><span class="pl-k">==</span>g<span class="pl-k">&amp;&amp;</span>Epoch.exception(<span class="pl-s1"><span class="pl-pds">&quot;</span>Unknown chart type &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e.<span class="pl-sc">type</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>),c.store(<span class="pl-s1"><span class="pl-pds">&quot;</span>epoch-chart<span class="pl-pds">&quot;</span></span>,g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">g</span>(e)),g.draw());<span class="pl-k">return</span> g})}()}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s">var</span> e;<span class="pl-en">e</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">e</span>){<span class="pl-k">return</span> <span class="pl-s3">e.fn</span>.<span class="pl-en">epoch</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-s">var</span> a;c.el<span class="pl-k">=</span><span class="pl-v">this</span>.get(<span class="pl-c1">0</span>);<span class="pl-c1">null</span><span class="pl-k">==</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>epoch-chart<span class="pl-pds">&quot;</span></span>))<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>Epoch._typeMap[c.<span class="pl-sc">type</span>],<span class="pl-c1">null</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span>Epoch.exception(<span class="pl-s1"><span class="pl-pds">&quot;</span>Unknown chart type &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c.<span class="pl-sc">type</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>),<span class="pl-v">this</span>.<span class="pl-sc">data</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>epoch-chart<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">a</span>(c)),a.draw());<span class="pl-k">return</span> a}};<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-s3">window</span>.jQuery<span class="pl-k">&amp;&amp;</span>e(jQuery)}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-s">var</span> e;<span class="pl-en">e</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">e</span>){<span class="pl-s">var</span> c,a,d;a<span class="pl-k">=</span>{};c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-en">d</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span><span class="pl-s1"><span class="pl-pds">&quot;</span>epoch-chart-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span> <span class="pl-k">++</span>c};<span class="pl-k">return</span> e.extend(e.fn,{<span class="pl-en">epoch</span>:<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c,e;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>epoch-chart<span class="pl-pds">&quot;</span></span>)))<span class="pl-k">return</span> a[c];b.el<span class="pl-k">=</span><span class="pl-v">this</span>.get(<span class="pl-c1">0</span>);e<span class="pl-k">=</span>Epoch._typeMap[b.<span class="pl-sc">type</span>];<span class="pl-c1">null</span><span class="pl-k">==</span>e<span class="pl-k">&amp;&amp;</span>Epoch.exception(<span class="pl-s1"><span class="pl-pds">&quot;</span>Unknown chart type &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b.<span class="pl-sc">type</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.<span class="pl-sc">data</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>epoch-chart<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span>d());b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">e</span>(b);a[c]<span class="pl-k">=</span>b;b.draw();<span class="pl-k">return</span> b}})};<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-s3">window</span>.Zepto<span class="pl-k">&amp;&amp;</span>e(Zepto)}).<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
</table>

  </div>

</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links right">
        <li><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
      <li><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li><a href="http://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li><a href="http://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li><a href="/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="/about" data-ga-click="Footer, go to about, text:about">About</a></li>

    </ul>

    <a href="/" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2015 <span title="0.03621s from github-fe133-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li><a href="/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li><a href="/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li><a href="/contact" data-ga-click="Footer, go to contact, text:contact">Contact</a></li>
    </ul>
  </div>
</div>


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-suggester-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents" placeholder=""></textarea>
      <div class="suggester-container">
        <div class="suggester fullscreen-suggester js-suggester js-navigation-container"></div>
      </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    

    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x flash-close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-9643b0378c6bcb216adcdaaaa703eed77aa239aaf1c2ae44cadb2fb5099ec172.js"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-18e60b9aac8c7c21fb47634ab0194e9f8a433423ebafc0eea0d39363aee0b8af.js"></script>
      
      

  </body>
</html>

